<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML lang="en">
<head>
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>SE_Requirement</title>
<link rel="stylesheet" href="../../../styles/SDK_SEDRIS.css" type="text/css">
</head>
<body>

<a name="Top"></a>

<div class="CenterDiv">
<table border="2" class="doc_set_header">
<tr><th>
<big><big>The SEDRIS Data Representation Model</big></big>
<br>
<!-- DRM spec. 4.1 -->
<font color="#ffffff">
APPENDIX C - Types
</font>
<br>
<font color="#ffffff">
SE_Requirement
</font>
</th></tr>
</table></div>

<!-- SEDRIS SDK Release 4.1.4 - July 1, 2011 -->

<PRE>
/*
 * STRUCT: SE_Requirement
 *
 *   Describes a relationship between two classes.  One class, the &quot;from&quot;
 *   class or &quot;current&quot; class, is taken from a context outside of this
 *   structure, while the &quot;to&quot; class is identified in this structure. The
 *   relationship from the &quot;from&quot; class to the &quot;to&quot; class is defined by this
 *   structure.
 *
 *   The relationship being described may be an association, aggregation,
 *   or component relationship.  Each class has a list of its association
 *   requirements, a list of its aggregation requirements, and a list of
 *   its component requirements. These lists are accessed via
 *   SE_AssociationsList(), SE_AggregatesList(), and SE_ComponentsList()
 *   (see). The SE_Requirement struct defined here is used as an
 *   entry in those lists.
 *
 *  Another way to describe lower_limit and upper_limit:
 *
 *     For fixed size arrays,
 *           multiplicity == SE_MLTPCTY_EXACTLY_N
 *           lower_limit  == upper_limit == (value of N)
 *
 *     For bounded arrays (at least N, at most M),
 *           multiplicity == SE_MLTPCTY_BOUNDED_ARRAY
 *           lower_limit  == (N, the lower bound value)
 *           upper_limit  == (M, the upper bound value)
 *
 *     For unbounded arrays (at least N, no upper bound),
 *           multiplicity == SE_MLTPCTY_UNBOUNDED_ARRAY
 *           lower_limit  == (N, lower bound value)
 *           upper_limit  == NO_UPPER_BOUND (-1)
 */
</PRE>
<span class="Code">typedef struct se_requirement
<br>
{</span>
<br>
<table class="CFunctionPrototype">
<tr><td class="CFunction">         </td> <td class="CFunction"></td> <td class="CFunction"><a href="SE_Integer.htm">SE_Integer</a></td>
              <td class="CFunction"><a name="drm_class"></a>drm_class;</td><td class="CFunction"><sup><A href="#Notes_drm_class">1</A></sup></td></tr>
<tr><td class="CFunction">         </td> <td class="CFunction"></td> <td class="CFunction"><a href="SE_Multiplicity.htm">SE_Multiplicity</a></td>
              <td class="CFunction"><a
              name="multiplicity"></a>multiplicity;</td><td class="CFunction"><sup><A href="#Notes_multiplicity">2</A></sup></td></tr>
<tr><td class="CFunction">         </td> <td class="CFunction"></td> <td class="CFunction"><a href="SE_Boolean.htm">SE_Boolean</a></td>
              <td class="CFunction"><a name="is_two_way"></a>is_two_way;</td></tr>
<tr><td class="CFunction">         </td> <td class="CFunction"></td> <td class="CFunction"><a href="SE_Boolean.htm">SE_Boolean</a></td>
              <td class="CFunction"><a name="ordered"></a>ordered;</td><td class="CFunction"><sup><A href="#Notes_ordered">3</A></sup></td></tr>
<tr><td class="CFunction">         </td> <td class="CFunction"></td> <td class="CFunction"><a href="SE_Integer.htm">SE_Integer</a></td>
              <td class="CFunction"><a name="lower_limit"></a>lower_limit;</td><td class="CFunction"><sup><A href="#Notes_lower_limit">4</A></sup></td></tr>
<tr><td class="CFunction">         </td> <td class="CFunction"></td> <td class="CFunction"><a href="SE_Integer.htm">SE_Integer</a></td>
              <td class="CFunction"><a name="upper_limit"></a>upper_limit;</td><td class="CFunction"><sup><A href="#Notes_upper_limit">5</A></sup></td></tr>
<tr><td class="CFunction">         </td> <td class="CFunction"></td> <td class="CFunction"><a href="SE_Integer.htm">SE_Integer</a></td>
              <td class="CFunction"><a
              name="drm_link_class"></a>drm_link_class;</td><td class="CFunction"><sup><A href="#Notes_drm_link_class">6</A></sup></td></tr>
<tr><td class="CFunction">   </td> <td class="CFunction">const</td> <td class="CFunction"><a href="SE_Requirement.htm">struct se_requirement</a></td>
        <td class="CFunction">*<a name="next_ptr"></a>next_ptr;</td><td class="CFunction"><sup><A href="#Notes_next_ptr">7</A></sup></td></tr>
</table>
<span class="Code">
} SE_Requirement;</span>
<br>

<br>
<HR>
<H2>Field Notes</H2>
<h4><a href="#drm_class" name="Notes_drm_class">drm_class</a></h4>
<P>
 The ID of the 'to' class, always meaningful.
</P>
<h4><a href="#multiplicity" name="Notes_multiplicity">multiplicity</a></h4>
<P>
 The multiplicity of the &quot;to&quot; side of the relationship,
 always meaningful.  It answers the question &quot;How many
 of the 'to' class objects are required to be related
 to a 'from' class object?&quot;
</P>
<h4><a href="#ordered" name="Notes_ordered">ordered</a></h4>
<P>
 When more than one object of the &quot;to&quot; class is allowed,
 this ordered flag indicates whether or not the ordering of
 those &quot;to&quot; objects is important.  This ordered flag is
 meaningful only when the multiplicity allows more than one
 &quot;to&quot; class object (i.e. - this <A href="#ordered">ordered</A>
 flag should be <A href="SE_Boolean.htm#SE_FALSE">SE_FALSE</A>, but should also be
 ignored and is not meaningful when the
 <A href="#multiplicity">multiplicity</A> is
 <A href="SE_Multiplicity.htm#SE_MLTPCTY_EXACTLY_ONE">SE_MLTPCTY_EXACTLY_ONE</A> or
 <A href="SE_Multiplicity.htm#SE_MLTPCTY_ZERO_OR_ONE">SE_MLTPCTY_ZERO_OR_ONE</A>).
</P>
<h4><a href="#lower_limit" name="Notes_lower_limit">lower_limit</a></h4>
<P>
 The lower limit for the number of &quot;to&quot; class objects.
 Only meaningful for multiplicity values of
<A href="SE_Multiplicity.htm#SE_MLTPCTY_EXACTLY_N">SE_MLTPCTY_EXACTLY_N</A>,
<A href="SE_Multiplicity.htm#SE_MLTPCTY_BOUNDED_ARRAY">SE_MLTPCTY_BOUNDED_ARRAY</A>, and
<A href="SE_Multiplicity.htm#SE_MLTPCTY_UNBOUNDED_ARRAY">SE_MLTPCTY_UNBOUNDED_ARRAY</A>. The
 meaning of <A href="#lower_limit">lower_limit</A> is:
</P>
<UL>
<LI>for <A href="SE_Multiplicity.htm#SE_MLTPCTY_EXACTLY_N">SE_MLTPCTY_EXACTLY_N</A>, the
<A href="#lower_limit">lower_limit</A> equals N, requiring exactly
 N &quot;to&quot; objects
</LI>
<LI>for <A href="SE_Multiplicity.htm#SE_MLTPCTY_BOUNDED_ARRAY">SE_MLTPCTY_BOUNDED_ARRAY</A>, the
<A href="#lower_limit">lower_limit</A> is the minimum number of
 &quot;to&quot; objects required
</LI>
<LI>for <A href="SE_Multiplicity.htm#SE_MLTPCTY_UNBOUNDED_ARRAY">SE_MLTPCTY_UNBOUNDED_ARRAY</A>, the
<A href="#lower_limit">lower_limit</A> is the minimum number of
 &quot;to&quot; objects required
</LI>
</UL>
<h4><a href="#upper_limit" name="Notes_upper_limit">upper_limit</a></h4>
<P>
 The upper limit for the number of &quot;to&quot; class objects.
 Only meaningful for multiplicity values of
<A href="SE_Multiplicity.htm#SE_MLTPCTY_EXACTLY_N">SE_MLTPCTY_EXACTLY_N</A>,
<A href="SE_Multiplicity.htm#SE_MLTPCTY_BOUNDED_ARRAY">SE_MLTPCTY_BOUNDED_ARRAY</A>, and
<A href="SE_Multiplicity.htm#SE_MLTPCTY_UNBOUNDED_ARRAY">SE_MLTPCTY_UNBOUNDED_ARRAY</A>.  The meaning
 of <A href="#upper_limit">upper_limit</A> is:
<UL>
<LI>for <A href="SE_Multiplicity.htm#SE_MLTPCTY_EXACTLY_N">SE_MLTPCTY_EXACTLY_N</A>, the
<A href="#upper_limit">upper_limit</A> equals N, requiring exactly
 N &quot;to&quot; objects (the value N is stored in both the
<A href="#lower_limit">lower_limit</A> and
<A href="#upper_limit">upper_limit</A> for
<A href="#multiplicity">multiplicity</A>
<A href="SE_Multiplicity.htm#SE_MLTPCTY_EXACTLY_N">SE_MLTPCTY_EXACTLY_N</A>)
</LI>
<LI>for <A href="SE_Multiplicity.htm#SE_MLTPCTY_BOUNDED_ARRAY">SE_MLTPCTY_BOUNDED_ARRAY</A>, the
<A href="#upper_limit">upper_limit</A> is the maximum number of
 &quot;to&quot; objects required
</LI>
<LI>for <A href="SE_Multiplicity.htm#SE_MLTPCTY_UNBOUNDED_ARRAY">SE_MLTPCTY_UNBOUNDED_ARRAY</A>, there
 is no upper limit for the number of &quot;to&quot; objects required,
 so <A href="#upper_limit">upper_limit</A> is set to the
 sentinel value SE_NO_UPPER_BOUND
</LI>
</UL>
<h4><a href="#drm_link_class" name="Notes_drm_link_class">drm_link_class</a></h4>
<P>
 Set to the link class, if the relationship has one; otherwise,
 set to <A href="SE_DRM_Class.htm#SE_CLS_DRM_NULL">SE_CLS_DRM_NULL</A>.
</P>
<h4><a href="#next_ptr" name="Notes_next_ptr">next_ptr</a></h4>
<P>
 A pointer to the next <A href="SE_Requirement.htm">SE_Requirement</A> struct in this
 singly-linked list of requirements; NULL if end-of-list.
</P>

<br>
<hr>
<br>
<strong>Prev:</strong> <a href="SE_Registerable_Enum_Type_Structure.htm">SE_Registerable_Enum_Type_Structure</a>.
<strong>Next:</strong> <a href="SE_RGB_Data.htm">SE_RGB_Data</a>.
<br>
<hr>
<br>
<font color="#FF0000">Return to:</font>
<strong><a href="#Top">Top of this Page</a>,
<a href="index.htm">Type Index</a></strong>
<br><br>
<table border="2" class="doc_set_header">
<tr><td>
<table border="0" class="doc_set_header">
<tr>
<td align="left" class="doc_set_footer">
Last updated: July 1, 2011
</td>
<td align="right" class="doc_set_footer">
Copyright &copy; 2011 <a href="http://www.sedris.org">SEDRIS</a>&#153;

</td></tr>
</table>
</td></tr>
</table>
</body>
</html>
