<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML lang="en">
<head>
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>SE GetAggregate</title>
<link rel="stylesheet" href="../../../styles/SDK_SEDRIS.css" type="text/css">
</head>
<body>

<a name="Top"></a>

<div class="CenterDiv">
<table border="2" class="doc_set_header">
<tr><th>
<big><big>SEDRIS Reference Manual</big></big>
<br>
<font color="#FFFFFF">
APPENDIX A - Transmittal Access Level 0 API
</font>
<br>
<!-- API spec. 4.1 -->
<font color="#ffffff">
Functions
</font>
<br>
<font color="#ffffff">
SE GetAggregate
</font>
</th></tr>
</table></div>

<!-- SEDRIS SDK Release 4.1.4 - July 1, 2011 -->

<table class="CFunctionPrototype">
<tr><td class="CFunction" colspan = "4">extern <a href="../types/SE_Return_Code.htm">SE_Return_Code</a></td></tr>
<tr><td class="CFunction" colspan = "4">SE_GetAggregate</td></tr>
<tr><td class="CFunction">(</td>
<tr class="CFunctionIndent1">    <td class="CFunction"><a href="../types/SE_Object.htm">SE_Object</a>&nbsp;</td> <td class="CFunction"> </td><td class="CFunction"><a name="component_object"></a>component_object,</td><td class="CFunction"><sup><A href="#Notes_component_object">1</A></sup></td></tr>
<tr class="CFunctionIndent1">    <td class="CFunction"><a href="../../drm/types/SE_DRM_Class.htm">SE_DRM_Class</a>&nbsp;</td> <td class="CFunction"> </td><td class="CFunction"><a name="drm_class"></a>drm_class,</td><td class="CFunction"><sup><A href="#Notes_drm_class">2</A></sup></td></tr>
<tr class="CFunctionIndent1">    <td class="CFunction"><a href="../types/SE_ITR_Behaviour.htm">SE_ITR_Behaviour</a>&nbsp;</td> <td class="CFunction"> </td><td class="CFunction"><a name="itr_traversal"></a>itr_traversal,</td><td class="CFunction"><sup><A href="#Notes_itr_traversal">3</A></sup></td></tr>
<tr class="CFunctionIndent1">    <td class="CFunction"><a href="../types/SE_Object.htm">SE_Object</a>&nbsp;</td> <td class="CFunction">*</td><td class="CFunction"><a name="aggregate_object"></a>aggregate_object,</td><td class="CFunction"><sup><A href="#Notes_aggregate_object">4</A></sup></td></tr>
<tr class="CFunctionIndent1">    <td class="CFunction"><a href="../types/SE_Object.htm">SE_Object</a>&nbsp;</td> <td class="CFunction">*</td><td class="CFunction"><a name="link_object"></a>link_object</td><td class="CFunction"><sup><A href="#Notes_link_object">5</A></sup></td></tr>

<tr><td class="CFunction">);</td></tr>
</table>
<h3>Definition</h3>
<p>
  Retrieves an aggregate object of a specified DRM class or
 of any DRM class (if not specified with
 <A href="#drm_class">drm_class</A>) that directly contains
 the given object (<A href="#component_object">component_object</A>) as a
 component. For example, if
 <A href="SE_GetAggregate.htm">SE_GetAggregate()</A> is called
 with a <A href="../../drm/classes/Model.htm">&lt;Model&gt;</A> as the
 <A href="#component_object">component_object</A> object,
 then a handle to the <A href="../../drm/classes/ModelLibrary.htm">&lt;Model Library&gt;</A> would be returned at
 *<A href="SE_GetAggregate.htm#aggregate_object">aggregate_object</A>,
 since the <A href="../../drm/classes/ModelLibrary.htm">&lt;Model Library&gt;</A> is the aggregate object that
  contains the <A href="../../drm/classes/Model.htm">&lt;Model&gt;</A> as a component.

</p>
<br>
<h3>Returns</h3>
<table class="Status">
<tr><td class="Status">
<A href="../types/SE_Return_Code.htm#SE_RETCOD_SUCCESS">SE_RETCOD_SUCCESS</A>
</td><td class="Status">
 and the requested object is returned, if valid parameters were
 passed in and all operations succeeded.
</td></tr>
<tr><td class="Status">
<A href="../types/SE_Return_Code.htm#SE_RETCOD_FAILURE">SE_RETCOD_FAILURE</A>
</td><td class="Status">
 and the status code is set appropriately if the call failed.
</td></tr>
</table>

<h3>Status Codes</h3>
<P><B><A href="../types/SE_Status_Code.htm">SE_Status_Code</A>(s) when
   <A href="../types/SE_Return_Code.htm#SE_RETCOD_SUCCESS">SE_RETCOD_SUCCESS</A> is returned:</B>
</P>
<table class="Status">
<tr><td class="Status">
<A href="../types/SE_Status_Code.htm#SE_STATCODE_SUCCESS">SE_STATCODE_SUCCESS</A>
</td><td class="Status">
 set if valid parameters were passed in and a valid aggregate of the
 specified class was found.
</td></tr>
<tr><td class="Status">
<A href="../types/SE_Status_Code.htm#SE_STATCODE_DIFFERENT_TRANSMITTAL">SE_STATCODE_DIFFERENT_TRANSMITTAL</A>
</td><td class="Status">
 set if the following conditions are met:
<OL>
<LI> valid parameters were passed in,
</LI>
<LI> the user requested that the API automatically resolve
     inter-transmittal references (ITR),
</LI>
<LI> an ITR reference was encountered in searching for the aggregate, and
</LI>
<LI> the iterator successfully resolved it and retrieved the
     aggregate from the new, different transmittal.
</LI>
</OL>
</td></tr>
<tr><td class="Status">
<A href="../types/SE_Status_Code.htm#SE_STATCODE_UNRESOLVED_OUTPUT_OBJECT">SE_STATCODE_UNRESOLVED_OUTPUT_OBJECT</A>
</td><td class="Status">
 set if valid parameters were passed in and only one object was found
 that satisfied the specified criteria, but the aggregate object is
 unresolved. In this case, the output parameters are set as for the
 <A href="../types/SE_Status_Code.htm#SE_STATCODE_SUCCESS">SE_STATCODE_SUCCESS</A> case.
</td></tr>
</table>
<P><B><A href="../types/SE_Status_Code.htm">SE_Status_Code</A>(s) when
   <A href="../types/SE_Return_Code.htm#SE_RETCOD_FAILURE">SE_RETCOD_FAILURE</A> is returned:</B>
</P>
<table class="Status">
<tr><td class="Status">
<A href="../types/SE_Status_Code.htm#SE_STATCODE_UNRESOLVED_INPUT_OBJECT">SE_STATCODE_UNRESOLVED_INPUT_OBJECT</A>
</td><td class="Status">
 set if <A href="#component_object">component_object</A> is unresolved.
</td></tr>
<tr><td class="Status">
<A href="../types/SE_Status_Code.htm#SE_STATCODE_NO_OBJECT">SE_STATCODE_NO_OBJECT</A>
</td><td class="Status">
 set if no aggregate object of the specified DRM class could be found.
</td></tr>
<tr><td class="Status">
 <A href="../types/SE_Status_Code.htm#SE_STATCODE_C_ENUMERATION_VALUE_INVALID">SE_STATCODE_C_ENUMERATION_VALUE_INVALID</A>
</td><td class="Status">
 set if <A href="#drm_class">drm_class</A> or
 <A href="#itr_traversal">itr_traversal</A> was not valid,
</td></tr>
<tr><td class="Status">
<A href="../types/SE_Status_Code.htm#SE_STATCODE_INACTIONABLE_FAILURE">SE_STATCODE_INACTIONABLE_FAILURE</A>
</td><td class="Status">
 set if the call fails for any other reason.
</td></tr>
</table>

<hr><h2>Parameters Notes</h2>

<p class="DataItemNote">
<sup><a href="#component_object" name="Notes_component_object">1</a></sup>
 the object for which one aggregate is desired.
</p>

<p class="DataItemNote">
<sup><a href="#drm_class" name="Notes_drm_class">2</a></sup>
 the DRM class of aggregate desired.  If
    SE_CLS_DRM_NULL is passed in, then any type of aggregate object will do.
    If an abstract class is specified, the API will look for a concrete
    aggregate that is a descendant of the given abstract DRM class.
</p>

<p class="DataItemNote">
<sup><a href="#itr_traversal" name="Notes_itr_traversal">3</a></sup>
 the user must choose how
    the function will behave when it encounters an Inter-Transmittal
    Reference (ITR). The function could automatically resolve such
    references and continue the search within the new transmittal;
    report all ITR references without resolving them; or just ignore
    them completely and continue to search within the current
    transmittal.
</p>

<p class="DataItemNote">
<sup><a href="#aggregate_object" name="Notes_aggregate_object">4</a></sup>
 pointer to an SE_Object for the aggregate found.
</p>

<p class="DataItemNote">
<sup><a href="#link_object" name="Notes_link_object">5</a></sup>
 if requested, then a handle
    to the link class object (a.k.a. association class object) traversed
    to reach the aggregate is copied to *link_object, if
    there is a link object; otherwise set to NULL.

    If the user passes in NULL for link_object, then
    link objects will be ignored (and *link_object
    will not be affected).
</p>

<p>
<hr>
<p>
<strong>Prev:</strong> <a href="SE_FreeTransmittal.htm">SE_FreeTransmittal</a>.
<strong>Next:</strong> <a href="SE_GetAssociate.htm">SE_GetAssociate</a>.
<strong>Up:</strong><a href="index.htm">Index</a>.
<br><br>
<table border="2" class="doc_set_header">
<tr><td>
<table border="0" class="doc_set_header">
<tr>
<td align="left" class="doc_set_footer">
Last updated: July 1, 2011
</td>
<td align="right" class="doc_set_footer">
Copyright &copy; 2011 <a href="http://www.sedris.org">SEDRIS</a>&#153;

</td></tr>
</table>
</td></tr>
</table>
</body>
</html>
