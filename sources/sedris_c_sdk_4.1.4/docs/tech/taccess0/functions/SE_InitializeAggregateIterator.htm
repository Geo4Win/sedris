<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML lang="en">
<head>
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>SE InitializeAggregateIterator</title>
<link rel="stylesheet" href="../../../styles/SDK_SEDRIS.css" type="text/css">
</head>
<body>

<a name="Top"></a>

<div class="CenterDiv">
<table border="2" class="doc_set_header">
<tr><th>
<big><big>SEDRIS Reference Manual</big></big>
<br>
<font color="#FFFFFF">
APPENDIX A - Transmittal Access Level 0 API
</font>
<br>
<!-- API spec. 4.1 -->
<font color="#ffffff">
Functions
</font>
<br>
<font color="#ffffff">
SE InitializeAggregateIterator
</font>
</th></tr>
</table></div>

<!-- SEDRIS SDK Release 4.1.4 - July 1, 2011 -->

<table class="CFunctionPrototype">
<tr><td class="CFunction" colspan = "4">extern <a href="../types/SE_Return_Code.htm">SE_Return_Code</a></td></tr>
<tr><td class="CFunction" colspan = "4">SE_InitializeAggregateIterator</td></tr>
<tr><td class="CFunction">(</td>
<tr class="CFunctionIndent1">    <td class="CFunction"><a href="../types/SE_Object.htm">SE_Object</a>&nbsp;</td> <td class="CFunction"> </td><td class="CFunction"><a name="start_object"></a>start_object,</td><td class="CFunction"><sup><A href="#Notes_start_object">1</A></sup></td></tr>
<tr class="CFunctionIndent1">    <td class="CFunction"><a href="../types/SE_Search_Filter.htm">SE_Search_Filter</a>&nbsp;</td> <td class="CFunction"> </td><td class="CFunction"><a name="filter"></a>filter,</td><td class="CFunction"><sup><A href="#Notes_filter">2</A></sup></td></tr>
<tr class="CFunctionIndent1">    <td class="CFunction"><a href="../types/SE_ITR_Behaviour.htm">SE_ITR_Behaviour</a>&nbsp;</td> <td class="CFunction"> </td><td class="CFunction"><a name="itr_traversal"></a>itr_traversal,</td><td class="CFunction"><sup><A href="#Notes_itr_traversal">3</A></sup></td></tr>
<tr class="CFunctionIndent1">    <td class="CFunction"><a href="../types/SE_Iterator.htm">SE_Iterator</a>&nbsp;</td> <td class="CFunction">*</td><td class="CFunction"><a name="iterator_out_ptr"></a>iterator_out_ptr</td><td class="CFunction"><sup><A href="#Notes_iterator_out_ptr">4</A></sup></td></tr>

<tr><td class="CFunction">);</td></tr>
</table>
<h3>Definition</h3>
<p>
  This function returns a handle to an iterator created to traverse over
  the list of aggregate DRM objects returning handles to those that meet
  the following conditions:
</P>
<OL>
<LI>The aggregate DRM objects contain the
 <A href="#start_object">start_object</A> as
 an immediate component (a component that is exactly one link away) via
 a two-way aggregation relationship.
</LI>
<LI>If a search filter is defined for the iterator, the
 aggregate DRM objects satisfy the rules specified in filter.  If no
 search filter is specified (a search filter handle with value zero is
 provided), no filtering is applied, and only condition (1)
 need be satisfied.
</LI>
</OL>
<P>
 The <A href="SE_GetNextObject.htm">SE_GetNextObject()</A> function is
 provided to get the next DRM object from an iterator.
</P><P>
 The
 <A href="SE_GetIterationLengthRemaining.htm">SE_GetIterationLengthRemaining()</A>
  function may be invoked to find out the remaining length of an iterator
 (<EM>i.e.</EM>, the number of DRM objects remaining inside the iterator).
</P><P>
 The <A href="SE_FreeIterator.htm">SE_FreeIterator()</A> function
 should be invoked when finished with an iterator to free it. Iterators
 can be freed at any time (<EM>e.g.</EM>, iterators can be freed before
 all of their DRM objects have been returned).

</p>
<br>
<h3>Returns</h3>
<table class="Status">
<tr><td class="Status">
<A href="../types/SE_Return_Code.htm#SE_RETCOD_SUCCESS">SE_RETCOD_SUCCESS</A>
</td><td class="Status">
 and the iterator is initialized.
</td></tr>
<tr><td class="Status">
<A href="../types/SE_Return_Code.htm#SE_RETCOD_FAILURE">SE_RETCOD_FAILURE</A>
</td><td class="Status">
 and the status code is set appropriately if the call failed.
</td></tr>
</table>

<h3>Status Codes</h3>
<P><B><A href="../types/SE_Status_Code.htm">SE_Status_Code</A>(s) when
   <A href="../types/SE_Return_Code.htm#SE_RETCOD_SUCCESS">SE_RETCOD_SUCCESS</A> is returned:</B>
</P>
<table class="Status">
<tr><td class="Status">
<A href="../types/SE_Status_Code.htm#SE_STATCODE_SUCCESS">SE_STATCODE_SUCCESS</A>
</td><td class="Status">
 set if valid parameters were passed in and all operations succeeded.
</td></tr>
</table>
<P><B><A href="../types/SE_Status_Code.htm">SE_Status_Code</A>(s) when
   <A href="../types/SE_Return_Code.htm#SE_RETCOD_FAILURE">SE_RETCOD_FAILURE</A> is returned:</B>
</P>
<table class="Status">
<tr><td class="Status">
<A href="../types/SE_Status_Code.htm#SE_STATCODE_UNRESOLVED_INPUT_OBJECT">SE_STATCODE_UNRESOLVED_INPUT_OBJECT</A>
</td><td class="Status">
 set if <A href="#start_object">start_object</A> is currently unresolved.
</td></tr>
<tr><td class="Status">
<A href="../types/SE_Status_Code.htm#SE_STATCODE_INACTIONABLE_FAILURE">SE_STATCODE_INACTIONABLE_FAILURE</A>
</td><td class="Status">
 set if
<OL>
<LI><A href="#itr_traversal">itr_traversal</A> is set to
 an illegal value,
</LI>
<LI>a search filter is provided, but is not a handle to a valid,
 active (i.e., unfreed) search filter defined by the specified
 API implementation, or
</LI>
<LI> the call fails for any other reason.
</LI>
</OL>
</td></tr>
</table>

<hr><h2>Parameters Notes</h2>

<p class="DataItemNote">
<sup><a href="#start_object" name="Notes_start_object">1</a></sup>
 the component object for which the user wants a list of
    the aggregate objects that contain this component object.
</p>

<p class="DataItemNote">
<sup><a href="#filter" name="Notes_filter">2</a></sup>
 a search filter that will be used to filter
    the output of this iterator.
</p>

<p class="DataItemNote">
<sup><a href="#itr_traversal" name="Notes_itr_traversal">3</a></sup>
 the user must choose how
    the iterator will behave when it encounters an Inter-Transmittal
    Reference (ITR). The iterator could automatically resolve such
    references and continue the search within the new transmittal;
    report all ITR references without resolving them; or just ignore
    them completely and continue to search within the current
    transmittal.
</p>

<p class="DataItemNote">
<sup><a href="#iterator_out_ptr" name="Notes_iterator_out_ptr">4</a></sup>
 a pointer to the freshly created
    iterator that will iterate over the aggregate objects that
    (1) contain the given component start_object via a 2-way aggregation
    and (2) pass the criteria defined in the search filter (if one was
    was provided).
</p>

<p>
<hr>
<p>
<strong>Prev:</strong> <a href="SE_GetUserData.htm">SE_GetUserData</a>.
<strong>Next:</strong> <a href="SE_InitializeAssociateIterator.htm">SE_InitializeAssociateIterator</a>.
<strong>Up:</strong><a href="index.htm">Index</a>.
<br><br>
<table border="2" class="doc_set_header">
<tr><td>
<table border="0" class="doc_set_header">
<tr>
<td align="left" class="doc_set_footer">
Last updated: July 1, 2011
</td>
<td align="right" class="doc_set_footer">
Copyright &copy; 2011 <a href="http://www.sedris.org">SEDRIS</a>&#153;

</td></tr>
</table>
</td></tr>
</table>
</body>
</html>
