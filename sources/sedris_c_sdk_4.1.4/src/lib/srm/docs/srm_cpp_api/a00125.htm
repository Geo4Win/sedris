<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Spatial Reference Model C++ API</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#ffffff">
<!-- SRM C++ SDK -->
<!-- SRM spec. 4.1 -->


<!-- Generated by Doxygen 1.3.2 -->
<div class="qindex"><a class="qindex" href="main.htm">Main&nbsp;Page</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="classes.htm">Alphabetical&nbsp;List</a> | <a class="qindex" href="annotated.htm">Compound&nbsp;List</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindex" href="functions.htm">Compound&nbsp;Members</a> | <a class="qindex" href="globals.htm">File&nbsp;Members</a></div>
<h1>srm::BaseSRF_3D Class Reference</h1>The <a class="el" href="a00125.htm">BaseSRF_3D</a> abstract class is the base class for the 3D SRFs.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="a00280.htm">BaseSRF.h</a>&gt;</code>
<p>
Inheritance diagram for srm::BaseSRF_3D:<p><center><img src="a00398.png" border="0" usemap="#a00399" alt="Inheritance graph"></center>
<map name="a00399">
<area href="a00127.htm" shape="rect" coords="356,5,593,35" alt="">
<area href="a00128.htm" shape="rect" coords="343,59,607,88" alt="">
<area href="a00173.htm" shape="rect" coords="389,112,560,141" alt="">
<area href="a00175.htm" shape="rect" coords="383,165,567,195" alt="">
<area href="a00176.htm" shape="rect" coords="384,219,565,248" alt="">
<area href="a00178.htm" shape="rect" coords="360,272,589,301" alt="">
<area href="a00179.htm" shape="rect" coords="360,325,589,355" alt="">
<area href="a00180.htm" shape="rect" coords="352,379,597,408" alt="">
<area href="a00185.htm" shape="rect" coords="356,432,593,461" alt="">
<area href="a00189.htm" shape="rect" coords="363,485,587,515" alt="">
<area href="a00194.htm" shape="rect" coords="396,539,553,568" alt="">
<area href="a00195.htm" shape="rect" coords="388,592,561,621" alt="">
<area href="a00196.htm" shape="rect" coords="373,645,576,675" alt="">
<area href="a00197.htm" shape="rect" coords="369,699,580,728" alt="">
<area href="a00123.htm" shape="rect" coords="7,352,113,381" alt="">
</map>
<center><font size="2">[<a target="top" href="graph_legend.htm">legend</a>]</font></center>Collaboration diagram for srm::BaseSRF_3D:<p><center><img src="a00400.png" border="0" usemap="#a00401" alt="Collaboration graph"></center>
<map name="a00401">
<area href="a00123.htm" shape="rect" coords="17,5,124,35" alt="">
</map>
<center><font size="2">[<a target="top" href="graph_legend.htm">legend</a>]</font></center><a href="a00005.htm">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="a0" doxytag="srm::BaseSRF_3D::isA"></a>
virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a0">isA</a> (<a class="el" href="a00123.htm#w31">SRF_ClassType</a> type) const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if this SRF is of the given class type. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00134.htm">Coord3D</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a1">createCoordinate3D</a> (<a class="el" href="a00276.htm#a17">SRM_Long_Float</a> coord_comp1, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> coord_comp2, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> coord_comp3)=0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a 3D coordinate object. </em> <a href="#a1"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a2">freeCoordinate3D</a> (<a class="el" href="a00134.htm">Coord3D</a> *coord)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Frees a 3D coordinate object. </em> <a href="#a2"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a3">getCoordinate3DValues</a> (const <a class="el" href="a00134.htm">Coord3D</a> &amp;coord, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;coord_comp1, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;coord_comp2, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;coord_comp3) const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Retrieves the 3D coordinate component values. </em> <a href="#a3"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a4">changeCoordinate3DSRF</a> (const <a class="el" href="a00134.htm">Coord3D</a> &amp;src_coord, <a class="el" href="a00134.htm">Coord3D</a> &amp;des_coord)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes a coordinate's values to this SRF. </em> <a href="#a4"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a5">changeCoordinate3DArraySRF</a> (<a class="el" href="a00134.htm">Coord3D</a> **src_coord_array, <a class="el" href="a00276.htm#a16">SRM_Integer_Positive</a> *index, <a class="el" href="a00134.htm">Coord3D</a> **des_coord_array, <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a> *region_array)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes an array of coordinate values to this SRF using tranformation object. </em> <a href="#a5"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a6">changeCoordinate3DSRFObject</a> (const <a class="el" href="a00134.htm">Coord3D</a> &amp;src_coord, const <a class="el" href="a00230.htm">SRM_ORM_Transformation_3D_Parameters</a> hst, <a class="el" href="a00134.htm">Coord3D</a> &amp;des_coord)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes a coordinate's values to this SRF using tranformation object. </em> <a href="#a6"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a7">changeCoordinate3DArraySRFObject</a> (<a class="el" href="a00134.htm">Coord3D</a> **src_coord_array, const <a class="el" href="a00230.htm">SRM_ORM_Transformation_3D_Parameters</a> hst, <a class="el" href="a00276.htm#a16">SRM_Integer_Positive</a> *index, <a class="el" href="a00134.htm">Coord3D</a> **des_coord_array, <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a> *region_array)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes an array of coordinate values to this SRF using tranformation object. </em> <a href="#a7"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a8">setValidRegion</a> (const <a class="el" href="a00276.htm#a14">SRM_Integer</a> component, const <a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a> type, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> lower, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> upper)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the Valid Region for this SRF. </em> <a href="#a8"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a9">setExtendedValidRegion</a> (const <a class="el" href="a00276.htm#a14">SRM_Integer</a> component, const <a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a> type, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> extended_lower, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> lower, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> upper, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> extended_upper)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the Extended Valid Region for this SRF. </em> <a href="#a9"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a10">getValidRegion</a> (const <a class="el" href="a00276.htm#a14">SRM_Integer</a> component, <a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a> &amp;type, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;lower, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;upper)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the Valid Region for this SRF. </em> <a href="#a10"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a11">getExtendedValidRegion</a> (const <a class="el" href="a00276.htm#a14">SRM_Integer</a> component, <a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a> &amp;type, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;extended_lower, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;lower, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;upper, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;extended_upper)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the Extended Valid Region for this SRF. </em> <a href="#a11"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00170.htm">Direction</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a12">createDirection</a> (const <a class="el" href="a00134.htm">Coord3D</a> &amp;ref_coord, const <a class="el" href="a00277.htm#a1082">SRM_Vector_3D</a> vec)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a direction object. </em> <a href="#a12"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00170.htm">Direction</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a13">createDirection</a> (const <a class="el" href="a00134.htm">Coord3D</a> &amp;ref_coord, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> vectorComp1, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> vectorComp2, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> vectorComp3)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a direction object. </em> <a href="#a13"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00170.htm">Direction</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a14">createDirection</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a direction object. </em> <a href="#a14"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a15">freeDirection</a> (<a class="el" href="a00170.htm">Direction</a> *direction)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Frees a direction object. </em> <a href="#a15"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a16">getDirectionValues</a> (const <a class="el" href="a00170.htm">Direction</a> &amp;direction, <a class="el" href="a00134.htm">Coord3D</a> &amp;ref_coord, <a class="el" href="a00277.htm#a1082">SRM_Vector_3D</a> vec) const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Retrieves the direction component values. </em> <a href="#a16"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a17">changeDirectionSRF</a> (const <a class="el" href="a00170.htm">Direction</a> &amp;src_dir, <a class="el" href="a00170.htm">Direction</a> &amp;des_dir)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes a direction's values to this SRF. </em> <a href="#a17"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a18">changeDirectionArraySRF</a> (<a class="el" href="a00170.htm">Direction</a> **src_direction_array, <a class="el" href="a00276.htm#a16">SRM_Integer_Positive</a> *index, <a class="el" href="a00170.htm">Direction</a> **des_direction_array, <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a> *region_array)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes a direction's values to this SRF using tranformation object. </em> <a href="#a18"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a19">changeDirectionSRFObject</a> (const <a class="el" href="a00170.htm">Direction</a> &amp;src_dir, const <a class="el" href="a00230.htm">SRM_ORM_Transformation_3D_Parameters</a> hst, <a class="el" href="a00170.htm">Direction</a> &amp;des_dir)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes a direction's values to this SRF using tranformation object. </em> <a href="#a19"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a20">changeDirectionArraySRFObject</a> (<a class="el" href="a00170.htm">Direction</a> **src_direction_array, const <a class="el" href="a00230.htm">SRM_ORM_Transformation_3D_Parameters</a> hst, <a class="el" href="a00276.htm#a16">SRM_Integer_Positive</a> *index, <a class="el" href="a00170.htm">Direction</a> **des_direction_array, <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a> *region_array)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes a direction's values to this SRF using tranformation object. </em> <a href="#a20"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="a21" doxytag="srm::BaseSRF_3D::checkDirection"></a>
virtual <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a21">checkDirection</a> (const <a class="el" href="a00170.htm">Direction</a> &amp;direction)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Check a direction in this SRF. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00172.htm">Orientation</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a22">createOrientation</a> (const <a class="el" href="a00134.htm">Coord3D</a> &amp;ref_coord, const <a class="el" href="a00277.htm#a1083">SRM_Matrix_3x3</a> mat)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates an orientation object. </em> <a href="#a22"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00172.htm">Orientation</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a23">createOrientation</a> (const <a class="el" href="a00134.htm">Coord3D</a> &amp;ref_coord, const <a class="el" href="a00277.htm#a1082">SRM_Vector_3D</a> vec1, const <a class="el" href="a00277.htm#a1082">SRM_Vector_3D</a> vec2, const <a class="el" href="a00277.htm#a1082">SRM_Vector_3D</a> vec3)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates an orientation object. </em> <a href="#a23"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00172.htm">Orientation</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a24">createOrientation</a> (const <a class="el" href="a00170.htm">Direction</a> &amp;dir1, const <a class="el" href="a00170.htm">Direction</a> &amp;dir2, const <a class="el" href="a00170.htm">Direction</a> &amp;dir3)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates an orientation object. </em> <a href="#a24"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00172.htm">Orientation</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a25">createOrientation</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates an orientation object. </em> <a href="#a25"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a26">freeOrientation</a> (<a class="el" href="a00172.htm">Orientation</a> *orientation)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Frees an orientation object. </em> <a href="#a26"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a27">getOrientationValues</a> (const <a class="el" href="a00172.htm">Orientation</a> &amp;orientation, <a class="el" href="a00134.htm">Coord3D</a> &amp;ref_coord, <a class="el" href="a00277.htm#a1083">SRM_Matrix_3x3</a> mat) const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Retrieves the orientation component values. </em> <a href="#a27"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a28">checkOrientation</a> (const <a class="el" href="a00172.htm">Orientation</a> &amp;orientation)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Check an orientation in this SRF. </em> <a href="#a28"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a29">changeOrientationSRF</a> (const <a class="el" href="a00172.htm">Orientation</a> &amp;src_orient, <a class="el" href="a00172.htm">Orientation</a> &amp;des_orient)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes an orientation's values to this SRF. </em> <a href="#a29"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#a30">instanceAbstractSpaceCoordinate</a> (const <a class="el" href="a00134.htm">Coord3D</a> &amp;src_coord, const <a class="el" href="a00172.htm">Orientation</a> &amp;orientation, <a class="el" href="a00134.htm">Coord3D</a> &amp;des_coord)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Instances a 3D source coordinate and orientation into this SRF. </em> <a href="#a30"></a><em><br><br></td></tr>
<tr><td colspan=2><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00238.htm">SRM_SRFS_Code_Info</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#e0">getNaturalSRFSetMemberCode</a> (const <a class="el" href="a00134.htm">Coord3D</a> &amp;src_coord, <a class="el" href="a00277.htm#a1085">SRM_ORM_Code</a> orm_dst, <a class="el" href="a00277.htm#a1088">SRM_RT_Code</a> rt_dst, <a class="el" href="a00277.htm#a1092">SRM_SRFS_Code</a> tgt_srfs)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Computes the natural SRF Set member code (region) where the 3D coordinate is located in the target SRF Set. </em> <a href="#e0"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00125.htm">BaseSRF_3D</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#e1">getNaturalSRFSetMember</a> (<a class="el" href="a00134.htm">Coord3D</a> &amp;src_coord, <a class="el" href="a00277.htm#a1085">SRM_ORM_Code</a> orm_dst, <a class="el" href="a00277.htm#a1088">SRM_RT_Code</a> rt_dst, <a class="el" href="a00277.htm#a1092">SRM_SRFS_Code</a> tgt_srfs)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the natural SRF Set member instance that the 3D coordinate is located in the target SRF Set. </em> <a href="#e1"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#e2">calculateEuclideanDistance</a> (const <a class="el" href="a00134.htm">Coord3D</a> &amp;coord1, const <a class="el" href="a00134.htm">Coord3D</a> &amp;coord2)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the euclidean distance (in metres) between two 3D coordinates. </em> <a href="#e2"></a><em><br><br></td></tr>
<tr><td colspan=2><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b0" doxytag="srm::BaseSRF_3D::BaseSRF_3D"></a>
&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#b0">BaseSRF_3D</a> (void *impl)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">No stack allocation. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b1" doxytag="srm::BaseSRF_3D::operator="></a>
<a class="el" href="a00125.htm">BaseSRF_3D</a> &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#b1">operator=</a> (const <a class="el" href="a00125.htm">BaseSRF_3D</a> &amp;)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">No copy constructor. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b2" doxytag="srm::BaseSRF_3D::~BaseSRF_3D"></a>
virtual&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00125.htm#b2">~BaseSRF_3D</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Use <a class="el" href="a00123.htm#a0">release()</a>. <br><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
The <a class="el" href="a00125.htm">BaseSRF_3D</a> abstract class is the base class for the 3D SRFs. 
<p>
SRFs are allocated by the API, and when no longer needed they should be released by calling the <a class="el" href="a00123.htm#a0">release()</a> method. <dl compact><dt><b>Author:</b></dt><dd>Warren Macchi, David Shen </dd></dl>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="a00123.htm">BaseSRF</a>, <a class="el" href="a00124.htm">BaseSRF_2D</a> </dd></dl>

<p>

<p>
Definition at line <a class="el" href="a00280.htm#l00637">637</a> of file <a class="el" href="a00280.htm">BaseSRF.h</a>.<hr><h2>Member Function Documentation</h2>
<a name="e2" doxytag="srm::BaseSRF_3D::calculateEuclideanDistance"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> srm::BaseSRF_3D::calculateEuclideanDistance </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>coord1</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>coord2</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the euclidean distance (in metres) between two 3D coordinates. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The input coordinates can be created from any SRF. </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a5" doxytag="srm::BaseSRF_3D::changeCoordinate3DArraySRF"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_3D::changeCoordinate3DArraySRF </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00134.htm">Coord3D</a> **&nbsp;</td>
          <td class="mdname" nowrap> <em>src_coord_array</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a16">SRM_Integer_Positive</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>index</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00134.htm">Coord3D</a> **&nbsp;</td>
          <td class="mdname" nowrap> <em>des_coord_array</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>region_array</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes an array of coordinate values to this SRF using tranformation object. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The destination coordinates must have been created using this SRF. <p>
The source and destination arrays must be of same size. <p>
All the coordinates in an array must be associated with the same SRF. <p>
When an exception is raised, the index parameter is set to the offending coordinate. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_coord_array</em>&nbsp;</td><td>in: the array of source coordinates in some other SRF </td></tr>
    <tr><td valign=top><em>index</em>&nbsp;</td><td>in/out: (in) the array length/ (out) the array index of the offending coordinate </td></tr>
    <tr><td valign=top><em>des_coord_array</em>&nbsp;</td><td>out: the array of destination coordinate in this SRF </td></tr>
    <tr><td valign=top><em>region_array</em>&nbsp;</td><td>out: the array of valid regions associated with the destination coordinate </td></tr>
  </table>
</dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a7" doxytag="srm::BaseSRF_3D::changeCoordinate3DArraySRFObject"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_3D::changeCoordinate3DArraySRFObject </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00134.htm">Coord3D</a> **&nbsp;</td>
          <td class="mdname" nowrap> <em>src_coord_array</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00230.htm">SRM_ORM_Transformation_3D_Parameters</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>hst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a16">SRM_Integer_Positive</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>index</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00134.htm">Coord3D</a> **&nbsp;</td>
          <td class="mdname" nowrap> <em>des_coord_array</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>region_array</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes an array of coordinate values to this SRF using tranformation object. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The destination coordinates must have been created using this SRF. <p>
The source and destination arrays must be of same size. <p>
All the coordinates in an array must be associated with the same SRF. <p>
When an exception is raised, the index parameter is set to the offending coordinate. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_coord_array</em>&nbsp;</td><td>in: the array of source coordinates in some other SRF </td></tr>
    <tr><td valign=top><em>hst</em>&nbsp;</td><td>in: the ORM 3D transformation </td></tr>
    <tr><td valign=top><em>index</em>&nbsp;</td><td>in/out: (in) the array length/ (out) the array index of the offending coordinate </td></tr>
    <tr><td valign=top><em>des_coord_array</em>&nbsp;</td><td>out: the array of destination coordinate in this SRF </td></tr>
    <tr><td valign=top><em>region_array</em>&nbsp;</td><td>out: the array of valid regions associated with the destination coordinate </td></tr>
  </table>
</dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a4" doxytag="srm::BaseSRF_3D::changeCoordinate3DSRF"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a> srm::BaseSRF_3D::changeCoordinate3DSRF </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>src_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>des_coord</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes a coordinate's values to this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The destination coordinate must have been created using this SRF. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_coord</em>&nbsp;</td><td>in: the source coordinate in some other SRF </td></tr>
    <tr><td valign=top><em>des_coord</em>&nbsp;</td><td>in/out: the destination coordinate in this SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>validity code for the destination coordinate </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>

<p>
Reimplemented in <a class="el" href="a00173.htm#a6">srm::SRF_Celestiocentric</a>, <a class="el" href="a00174.htm#a7">srm::SRF_Celestiodetic</a>, <a class="el" href="a00188.htm#a14">srm::SRF_LocalTangentSpaceEuclidean</a>, <a class="el" href="a00189.htm#a10">srm::SRF_LococentricEuclidean3D</a>, <a class="el" href="a00190.htm#a12">srm::SRF_Mercator</a>, <a class="el" href="a00193.htm#a13">srm::SRF_PolarStereographic</a>, and <a class="el" href="a00198.htm#a13">srm::SRF_TransverseMercator</a>.    </td>
  </tr>
</table>
<a name="a6" doxytag="srm::BaseSRF_3D::changeCoordinate3DSRFObject"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a> srm::BaseSRF_3D::changeCoordinate3DSRFObject </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>src_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00230.htm">SRM_ORM_Transformation_3D_Parameters</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>hst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>des_coord</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes a coordinate's values to this SRF using tranformation object. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The destination coordinate must have been created using this SRF. <p>
The value of omega_1, omega_2 and omega_3 for hst must be within the range ( -2_PI, 2_PI ). <p>
The value of delta_s for hst must be strictly greater than -1.0. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_coord</em>&nbsp;</td><td>in: the source coordinate in some other SRF </td></tr>
    <tr><td valign=top><em>hst</em>&nbsp;</td><td>in: the ORM 3D transformation </td></tr>
    <tr><td valign=top><em>des_coord</em>&nbsp;</td><td>out: the destination coordinate in this SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>validity code for the destination coordinate </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a18" doxytag="srm::BaseSRF_3D::changeDirectionArraySRF"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void srm::BaseSRF_3D::changeDirectionArraySRF </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00170.htm">Direction</a> **&nbsp;</td>
          <td class="mdname" nowrap> <em>src_direction_array</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a16">SRM_Integer_Positive</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>index</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00170.htm">Direction</a> **&nbsp;</td>
          <td class="mdname" nowrap> <em>des_direction_array</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>region_array</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes a direction's values to this SRF using tranformation object. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The destination directions must have been created using this SRF. <p>
The source and destination arrays must be of same size. <p>
All the directions in an array must be associated with the same SRF. <p>
When an exception is raised, the index parameter is set to the offending direction. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_direction_array</em>&nbsp;</td><td>in: the array of source direction in some other SRF </td></tr>
    <tr><td valign=top><em>index</em>&nbsp;</td><td>in/out: (in) the array length/ (out) the array index of the offending direction </td></tr>
    <tr><td valign=top><em>des_direction_array</em>&nbsp;</td><td>out: the array of destination direction in this SRF </td></tr>
    <tr><td valign=top><em>region_array</em>&nbsp;</td><td>out: the array of valid regions associated with the destination direction </td></tr>
  </table>
</dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a20" doxytag="srm::BaseSRF_3D::changeDirectionArraySRFObject"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void srm::BaseSRF_3D::changeDirectionArraySRFObject </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00170.htm">Direction</a> **&nbsp;</td>
          <td class="mdname" nowrap> <em>src_direction_array</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00230.htm">SRM_ORM_Transformation_3D_Parameters</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>hst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a16">SRM_Integer_Positive</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>index</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00170.htm">Direction</a> **&nbsp;</td>
          <td class="mdname" nowrap> <em>des_direction_array</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>region_array</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes a direction's values to this SRF using tranformation object. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The destination directions must have been created using this SRF. <p>
The source and destination arrays must be of same size. <p>
All the directions in an array must be associated with the same SRF. <p>
The value of omega_1, omega_2 and omega_3 for hst must be within the range ( -2_PI, 2_PI ). <p>
The value of delta_s for hst must be strictly greater than -1.0. <p>
When an exception is raised, the index parameter is set to the offending direction. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_direction_array</em>&nbsp;</td><td>in: the array of source direction in some other SRF </td></tr>
    <tr><td valign=top><em>hst</em>&nbsp;</td><td>in: the ORM 3D transformation </td></tr>
    <tr><td valign=top><em>index</em>&nbsp;</td><td>in/out: (in) the array length/ (out) the array index of the offending direction </td></tr>
    <tr><td valign=top><em>des_direction_array</em>&nbsp;</td><td>out: the array of destination direction in this SRF </td></tr>
    <tr><td valign=top><em>region_array</em>&nbsp;</td><td>out: the array of valid regions associated with the destination direction </td></tr>
  </table>
</dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a17" doxytag="srm::BaseSRF_3D::changeDirectionSRF"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a> srm::BaseSRF_3D::changeDirectionSRF </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00170.htm">Direction</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>src_dir</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00170.htm">Direction</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>des_dir</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes a direction's values to this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The destination direction must have been created using this SRF. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_dir</em>&nbsp;</td><td>in: the source direction in some other SRF </td></tr>
    <tr><td valign=top><em>des_dir</em>&nbsp;</td><td>out: the destination direction in this SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>valid region category for the reference location associated with the destination direction </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a19" doxytag="srm::BaseSRF_3D::changeDirectionSRFObject"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a> srm::BaseSRF_3D::changeDirectionSRFObject </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00170.htm">Direction</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>src_dir</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00230.htm">SRM_ORM_Transformation_3D_Parameters</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>hst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00170.htm">Direction</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>des_dir</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes a direction's values to this SRF using tranformation object. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The destination direction must have been created using this SRF. <p>
The value of omega_1, omega_2 and omega_3 for hst must be within the range ( -2_PI, 2_PI ). <p>
The value of delta_s for hst must be strictly greater than -1.0. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_dir</em>&nbsp;</td><td>in: the source direction in some other SRF </td></tr>
    <tr><td valign=top><em>hst</em>&nbsp;</td><td>in: the ORM 3D transformation </td></tr>
    <tr><td valign=top><em>des_dir</em>&nbsp;</td><td>out: the destination direction in this SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>valid region category for the reference location associated with the destination direction </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a29" doxytag="srm::BaseSRF_3D::changeOrientationSRF"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a> srm::BaseSRF_3D::changeOrientationSRF </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00172.htm">Orientation</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>src_orient</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00172.htm">Orientation</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>des_orient</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes an orientation's values to this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The destination orientation must have been created using this SRF. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_orient</em>&nbsp;</td><td>in: the source orientation in some other SRF </td></tr>
    <tr><td valign=top><em>des_orient</em>&nbsp;</td><td>in/out: the destination orientation in this SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>valid region category for the reference location associated with the destination orientation </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a28" doxytag="srm::BaseSRF_3D::checkOrientation"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00277.htm#a1122">SRM_Coordinate_Valid_Region</a> srm::BaseSRF_3D::checkOrientation </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00172.htm">Orientation</a> &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>orientation</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Check an orientation in this SRF. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a1" doxytag="srm::BaseSRF_3D::createCoordinate3D"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00134.htm">Coord3D</a>* srm::BaseSRF_3D::createCoordinate3D </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_comp1</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_comp2</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_comp3</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [pure virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates a 3D coordinate object. 
<p>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="a00125.htm#a2">freeCoordinate3D()</a> </dd></dl>
<dl compact><dt><b>Returns:</b></dt><dd>a 3D coordinate object </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>

<p>
Implemented in <a class="el" href="a00173.htm#a0">srm::SRF_Celestiocentric</a>, <a class="el" href="a00174.htm#a0">srm::SRF_Celestiodetic</a>, <a class="el" href="a00175.htm#a0">srm::SRF_Celestiomagnetic</a>, <a class="el" href="a00176.htm#a0">srm::SRF_EquatorialInertial</a>, <a class="el" href="a00177.htm#a0">srm::SRF_EquidistantCylindrical</a>, <a class="el" href="a00178.htm#a0">srm::SRF_HeliosphericAriesEcliptic</a>, <a class="el" href="a00179.htm#a0">srm::SRF_HeliosphericEarthEcliptic</a>, <a class="el" href="a00180.htm#a0">srm::SRF_HeliosphericEarthEquatorial</a>, <a class="el" href="a00181.htm#a0">srm::SRF_LambertConformalConic</a>, <a class="el" href="a00185.htm#a0">srm::SRF_LocalSpaceRectangular3D</a>, <a class="el" href="a00186.htm#a0">srm::SRF_LocalTangentSpaceAzimuthalSpherical</a>, <a class="el" href="a00187.htm#a0">srm::SRF_LocalTangentSpaceCylindrical</a>, <a class="el" href="a00188.htm#a0">srm::SRF_LocalTangentSpaceEuclidean</a>, <a class="el" href="a00189.htm#a0">srm::SRF_LococentricEuclidean3D</a>, <a class="el" href="a00190.htm#a0">srm::SRF_Mercator</a>, <a class="el" href="a00191.htm#a0">srm::SRF_ObliqueMercatorSpherical</a>, <a class="el" href="a00192.htm#a0">srm::SRF_Planetodetic</a>, <a class="el" href="a00193.htm#a0">srm::SRF_PolarStereographic</a>, <a class="el" href="a00194.htm#a0">srm::SRF_SolarEcliptic</a>, <a class="el" href="a00195.htm#a0">srm::SRF_SolarEquatorial</a>, <a class="el" href="a00196.htm#a0">srm::SRF_SolarMagneticDipole</a>, <a class="el" href="a00197.htm#a0">srm::SRF_SolarMagneticEcliptic</a>, and <a class="el" href="a00198.htm#a0">srm::SRF_TransverseMercator</a>.    </td>
  </tr>
</table>
<a name="a14" doxytag="srm::BaseSRF_3D::createDirection"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00170.htm">Direction</a>* srm::BaseSRF_3D::createDirection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates a direction object. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>a direction object </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
<dl compact><dt><b>Note:</b></dt><dd>The returned "default" <a class="el" href="a00170.htm">Direction</a> object is intended to be used as the destination direction for the changeDirectionSRF method. The "default" reference location values cannot be changed except through that method. </dd></dl>
    </td>
  </tr>
</table>
<a name="a13" doxytag="srm::BaseSRF_3D::createDirection"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00170.htm">Direction</a>* srm::BaseSRF_3D::createDirection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>ref_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>vectorComp1</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>vectorComp2</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>vectorComp3</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates a direction object. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>a direction object </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a12" doxytag="srm::BaseSRF_3D::createDirection"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00170.htm">Direction</a>* srm::BaseSRF_3D::createDirection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>ref_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00277.htm#a1082">SRM_Vector_3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>vec</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates a direction object. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>a direction object </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a25" doxytag="srm::BaseSRF_3D::createOrientation"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00172.htm">Orientation</a>* srm::BaseSRF_3D::createOrientation </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates an orientation object. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>an orientation object </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
<dl compact><dt><b>Note:</b></dt><dd>The returned "default" <a class="el" href="a00172.htm">Orientation</a> object is intended to be used as an output argument for the changeOrientationSRF method. The "default" reference location values cannot be changed except through that method. </dd></dl>
    </td>
  </tr>
</table>
<a name="a24" doxytag="srm::BaseSRF_3D::createOrientation"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00172.htm">Orientation</a>* srm::BaseSRF_3D::createOrientation </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00170.htm">Direction</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>dir1</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00170.htm">Direction</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>dir2</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00170.htm">Direction</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>dir3</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates an orientation object. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>dir1</em>&nbsp;</td><td>in: the first component <a class="el" href="a00170.htm">Direction</a> for the orientation matrix </td></tr>
    <tr><td valign=top><em>dir2</em>&nbsp;</td><td>in: the second component <a class="el" href="a00170.htm">Direction</a> for the orientation matrix </td></tr>
    <tr><td valign=top><em>dir3</em>&nbsp;</td><td>in: the third component <a class="el" href="a00170.htm">Direction</a> for the orientation matrix </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>an orientation object </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
<dl compact><dt><b>Note:</b></dt><dd>The reference location must be the same for three input <a class="el" href="a00170.htm">Direction</a> objects. </dd></dl>
    </td>
  </tr>
</table>
<a name="a23" doxytag="srm::BaseSRF_3D::createOrientation"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00172.htm">Orientation</a>* srm::BaseSRF_3D::createOrientation </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>ref_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00277.htm#a1082">SRM_Vector_3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>vec1</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00277.htm#a1082">SRM_Vector_3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>vec2</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00277.htm#a1082">SRM_Vector_3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>vec3</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates an orientation object. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>ref_coord</em>&nbsp;</td><td>in: the reference location for the orientation </td></tr>
    <tr><td valign=top><em>vec1</em>&nbsp;</td><td>in: the first component vector for the orientation matrix </td></tr>
    <tr><td valign=top><em>vec2</em>&nbsp;</td><td>in: the second component vector for the orientation matrix </td></tr>
    <tr><td valign=top><em>vec3</em>&nbsp;</td><td>in: the third component vector for the orientation matrix </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>an orientation object </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a22" doxytag="srm::BaseSRF_3D::createOrientation"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00172.htm">Orientation</a>* srm::BaseSRF_3D::createOrientation </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>ref_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00277.htm#a1083">SRM_Matrix_3x3</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>mat</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates an orientation object. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>ref_coord</em>&nbsp;</td><td>in: the reference location for the orientation </td></tr>
    <tr><td valign=top><em>mat</em>&nbsp;</td><td>in: the orientation matrix </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>an orientation object </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a2" doxytag="srm::BaseSRF_3D::freeCoordinate3D"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_3D::freeCoordinate3D </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00134.htm">Coord3D</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>coord</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Frees a 3D coordinate object. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a15" doxytag="srm::BaseSRF_3D::freeDirection"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_3D::freeDirection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00170.htm">Direction</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>direction</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Frees a direction object. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a26" doxytag="srm::BaseSRF_3D::freeOrientation"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_3D::freeOrientation </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00172.htm">Orientation</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>orientation</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Frees an orientation object. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a3" doxytag="srm::BaseSRF_3D::getCoordinate3DValues"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_3D::getCoordinate3DValues </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_comp1</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_comp2</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_comp3</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the 3D coordinate component values. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a16" doxytag="srm::BaseSRF_3D::getDirectionValues"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_3D::getDirectionValues </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00170.htm">Direction</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>direction</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>ref_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1082">SRM_Vector_3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>vec</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the direction component values. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a11" doxytag="srm::BaseSRF_3D::getExtendedValidRegion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_3D::getExtendedValidRegion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00276.htm#a14">SRM_Integer</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>component</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>type</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>extended_lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>upper</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>extended_upper</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Get the Extended Valid Region for this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>Given a coordinate component, the last invocation of this method or the setValidRegion method determines the valid and extended valid intervals of the coordinate component values. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>component</em>&nbsp;</td><td>in: the coordinate component (1, 2, or 3) </td></tr>
    <tr><td valign=top><em>type</em>&nbsp;</td><td>out: the type of interval </td></tr>
    <tr><td valign=top><em>extended_lower</em>&nbsp;</td><td>out: the extended lower value of the interval </td></tr>
    <tr><td valign=top><em>lower</em>&nbsp;</td><td>out: the lower value of the interval </td></tr>
    <tr><td valign=top><em>upper</em>&nbsp;</td><td>out: the upper value of the interval </td></tr>
    <tr><td valign=top><em>extended_upper</em>&nbsp;</td><td>out: the extended_upper value of the interval </td></tr>
  </table>
</dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="e1" doxytag="srm::BaseSRF_3D::getNaturalSRFSetMember"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00125.htm">BaseSRF_3D</a>* srm::BaseSRF_3D::getNaturalSRFSetMember </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>src_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1085">SRM_ORM_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>orm_dst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1088">SRM_RT_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>rt_dst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1092">SRM_SRFS_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_srfs</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the natural SRF Set member instance that the 3D coordinate is located in the target SRF Set. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_coord</em>&nbsp;</td><td>in : the source 3D coordinate in an SRF </td></tr>
    <tr><td valign=top><em>orm_dst</em>&nbsp;</td><td>in : the ORM for the destination SRF Set </td></tr>
    <tr><td valign=top><em>rt_dst</em>&nbsp;</td><td>in : the RT for the destination SRF Set </td></tr>
    <tr><td valign=top><em>tgt_srfs</em>&nbsp;</td><td>in : the destination SRF Set Code </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the SRF Set Member instance for the destination SRF Set </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="e0" doxytag="srm::BaseSRF_3D::getNaturalSRFSetMemberCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00238.htm">SRM_SRFS_Code_Info</a> srm::BaseSRF_3D::getNaturalSRFSetMemberCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>src_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1085">SRM_ORM_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>orm_dst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1088">SRM_RT_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>rt_dst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1092">SRM_SRFS_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_srfs</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Computes the natural SRF Set member code (region) where the 3D coordinate is located in the target SRF Set. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_coord</em>&nbsp;</td><td>in : the source 3D coordinate in an SRF </td></tr>
    <tr><td valign=top><em>orm_dst</em>&nbsp;</td><td>in : the ORM for the destination SRF Set </td></tr>
    <tr><td valign=top><em>rt_dst</em>&nbsp;</td><td>in : the RT for the destination SRF Set </td></tr>
    <tr><td valign=top><em>tgt_srfs</em>&nbsp;</td><td>in : the destination SRF Set Code </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the SRF Set Member code for the destination SRF Set </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a27" doxytag="srm::BaseSRF_3D::getOrientationValues"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_3D::getOrientationValues </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00172.htm">Orientation</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>orientation</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>ref_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1083">SRM_Matrix_3x3</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>mat</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the orientation component values. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a10" doxytag="srm::BaseSRF_3D::getValidRegion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_3D::getValidRegion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00276.htm#a14">SRM_Integer</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>component</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>type</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>upper</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Get the Valid Region for this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>Given a coordinate component, the last invocation of this method or the setExtendedValidRegion method determines the valid and extended valid intervals of the coordinate component values. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>component</em>&nbsp;</td><td>in: the coordinate component (1, 2, or 3) </td></tr>
    <tr><td valign=top><em>type</em>&nbsp;</td><td>out: the type of interval </td></tr>
    <tr><td valign=top><em>lower</em>&nbsp;</td><td>out: the lower value of the interval </td></tr>
    <tr><td valign=top><em>upper</em>&nbsp;</td><td>out: the upper value of the interval </td></tr>
  </table>
</dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a30" doxytag="srm::BaseSRF_3D::instanceAbstractSpaceCoordinate"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_3D::instanceAbstractSpaceCoordinate </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>src_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00172.htm">Orientation</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>orientation</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>des_coord</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Instances a 3D source coordinate and orientation into this SRF. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a9" doxytag="srm::BaseSRF_3D::setExtendedValidRegion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_3D::setExtendedValidRegion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00276.htm#a14">SRM_Integer</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>component</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>type</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>extended_lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>upper</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>extended_upper</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set the Extended Valid Region for this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>Given a coordinate component, the last invocation of this method or the setValidRegion method determines the valid and extended valid intervals of the coordinate component values. <p>
Upper or Lower value is ignored if the interval is a semi-interval or unbounded. <p>
The Lower value must be strictly less than the Upper value. <p>
The Extended_Lower value must be strictly greater than the Lower value and the Extended_Upper value must be strictly smaller than the Lower value. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>component</em>&nbsp;</td><td>in: the coordinate component (1, 2, or 3) </td></tr>
    <tr><td valign=top><em>type</em>&nbsp;</td><td>in: the type of interval </td></tr>
    <tr><td valign=top><em>extended_lower</em>&nbsp;</td><td>in: the extended lower value of the interval </td></tr>
    <tr><td valign=top><em>lower</em>&nbsp;</td><td>in: the lower value of the interval </td></tr>
    <tr><td valign=top><em>upper</em>&nbsp;</td><td>in: the upper value of the interval </td></tr>
    <tr><td valign=top><em>extended_upper</em>&nbsp;</td><td>in: the extended_upper value of the interval </td></tr>
  </table>
</dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a8" doxytag="srm::BaseSRF_3D::setValidRegion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_3D::setValidRegion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00276.htm#a14">SRM_Integer</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>component</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>type</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>upper</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set the Valid Region for this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>Given a coordinate component, the last invocation of this method or the setExtendedValidRegion method determines the valid and extended valid intervals of the coordinate component values. <p>
Upper or Lower value is ignored if the interval is a semi-interval or unbounded. <p>
The Lower value must be strictly less than the Upper value. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>component</em>&nbsp;</td><td>in: the coordinate component (1, 2, or 3) </td></tr>
    <tr><td valign=top><em>type</em>&nbsp;</td><td>in: the type of interval </td></tr>
    <tr><td valign=top><em>lower</em>&nbsp;</td><td>in: the lower value of the interval </td></tr>
    <tr><td valign=top><em>upper</em>&nbsp;</td><td>in: the upper value of the interval </td></tr>
  </table>
</dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="a00280.htm">BaseSRF.h</a></ul>
<hr size="1">
<table width="100%">
<tr valign="middle">
<td align="left"><strong>Spatial Reference Model C++ API</strong></td>
<td align="right"><strong>
Version 4.1.4 - July 1, 2011
</strong></td>
</tr>
<tr valign="middle">
<td align="left">Copyright &copy; 2011 <a href="http://www.sedris.org">SEDRIS</a>&#153;</td>
<td align="right">Docs by <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.3.2</td>
</tr>
</table>
</body>
</html>
