<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Spatial Reference Model C++ API</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#ffffff">
<!-- SRM C++ SDK -->
<!-- SRM spec. 4.1 -->


<!-- Generated by Doxygen 1.3.2 -->
<div class="qindex"><a class="qindex" href="main.htm">Main&nbsp;Page</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="classes.htm">Alphabetical&nbsp;List</a> | <a class="qindex" href="annotated.htm">Compound&nbsp;List</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindex" href="functions.htm">Compound&nbsp;Members</a> | <a class="qindex" href="globals.htm">File&nbsp;Members</a></div>
<h1>srm::BaseSRF_MapProjection Class Reference</h1>The <a class="el" href="a00126.htm">BaseSRF_MapProjection</a> abstract class is the base class for the 2D SRFs with map projections.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="a00280.htm">BaseSRF.h</a>&gt;</code>
<p>
Inheritance diagram for srm::BaseSRF_MapProjection:<p><center><img src="a00402.png" border="0" usemap="#a00403" alt="Inheritance graph"></center>
<map name="a00403">
<area href="a00177.htm" shape="rect" coords="553,5,764,35" alt="">
<area href="a00181.htm" shape="rect" coords="548,59,769,88" alt="">
<area href="a00190.htm" shape="rect" coords="591,112,727,141" alt="">
<area href="a00191.htm" shape="rect" coords="541,165,776,195" alt="">
<area href="a00193.htm" shape="rect" coords="561,219,756,248" alt="">
<area href="a00198.htm" shape="rect" coords="560,272,757,301" alt="">
<area href="a00127.htm" shape="rect" coords="7,139,244,168" alt="">
</map>
<center><font size="2">[<a target="top" href="graph_legend.htm">legend</a>]</font></center>Collaboration diagram for srm::BaseSRF_MapProjection:<p><center><img src="a00404.png" border="0" usemap="#a00405" alt="Collaboration graph"></center>
<map name="a00405">
<area href="a00127.htm" shape="rect" coords="5,160,243,189" alt="">
<area href="a00125.htm" shape="rect" coords="59,83,189,112" alt="">
<area href="a00123.htm" shape="rect" coords="71,5,177,35" alt="">
</map>
<center><font size="2">[<a target="top" href="graph_legend.htm">legend</a>]</font></center><a href="a00008.htm">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="a0" doxytag="srm::BaseSRF_MapProjection::isA"></a>
virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00126.htm#a0">isA</a> (<a class="el" href="a00123.htm#w31">SRF_ClassType</a> type) const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if this SRF is of the given class type. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00126.htm#a1">setValidGeodeticRegion</a> (const <a class="el" href="a00276.htm#a14">SRM_Integer</a> component, const <a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a> type, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> lower, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> upper)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the Valid Region for this SRF in geodetic coordinates (lon/lat). </em> <a href="#a1"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00126.htm#a2">setExtendedValidGeodeticRegion</a> (const <a class="el" href="a00276.htm#a14">SRM_Integer</a> component, const <a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a> type, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> extended_lower, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> lower, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> upper, const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> extended_upper)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the Extended Valid Geodetic Region for this SRF. </em> <a href="#a2"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00126.htm#a3">getValidGeodeticRegion</a> (const <a class="el" href="a00276.htm#a14">SRM_Integer</a> component, <a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a> &amp;type, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;lower, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;upper)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the Valid Geodetic Region for this SRF. </em> <a href="#a3"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00126.htm#a4">getExtendedValidGeodeticRegion</a> (const <a class="el" href="a00276.htm#a14">SRM_Integer</a> component, <a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a> &amp;type, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;extended_lower, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;lower, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;upper, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;extended_upper)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the Extended Valid Geodetic Region for this SRF. </em> <a href="#a4"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00126.htm#a5">calculateConvergenceOfTheMeridian</a> (const <a class="el" href="a00158.htm">CoordSurf</a> &amp;surf_coord)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the Convergence of the Meridian in radians at a position on the surface of the oblate spheroid RD. </em> <a href="#a5"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00126.htm#a6">calculatePointDistortion</a> (const <a class="el" href="a00158.htm">CoordSurf</a> &amp;surf_coord)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the point distortion at a position on the surface of the ellipsoid RD. </em> <a href="#a6"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00126.htm#a7">calculateMapAzimuth</a> (const <a class="el" href="a00158.htm">CoordSurf</a> &amp;src_coord, const <a class="el" href="a00158.htm">CoordSurf</a> &amp;des_coord)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the map azimuth in radians between two surface coordinates. </em> <a href="#a7"></a><em><br><br></td></tr>
<tr><td colspan=2><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b0" doxytag="srm::BaseSRF_MapProjection::BaseSRF_MapProjection"></a>
&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00126.htm#b0">BaseSRF_MapProjection</a> (void *impl)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">No stack allocation. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b1" doxytag="srm::BaseSRF_MapProjection::operator="></a>
<a class="el" href="a00126.htm">BaseSRF_MapProjection</a> &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00126.htm#b1">operator=</a> (const <a class="el" href="a00126.htm">BaseSRF_MapProjection</a> &amp;)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">No copy constructor. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b2" doxytag="srm::BaseSRF_MapProjection::~BaseSRF_MapProjection"></a>
virtual&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00126.htm#b2">~BaseSRF_MapProjection</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Use <a class="el" href="a00123.htm#a0">release()</a>. <br><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
The <a class="el" href="a00126.htm">BaseSRF_MapProjection</a> abstract class is the base class for the 2D SRFs with map projections. 
<p>
SRFs are allocated by the API, and when no longer needed they should be released by calling the <a class="el" href="a00123.htm#a0">release()</a> method. <dl compact><dt><b>Author:</b></dt><dd>Warren Macchi, David Shen </dd></dl>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="a00127.htm">BaseSRF_WithEllipsoidalHeight</a>, <a class="el" href="a00125.htm">BaseSRF_3D</a> </dd></dl>

<p>

<p>
Definition at line <a class="el" href="a00280.htm#l01250">1250</a> of file <a class="el" href="a00280.htm">BaseSRF.h</a>.<hr><h2>Member Function Documentation</h2>
<a name="a5" doxytag="srm::BaseSRF_MapProjection::calculateConvergenceOfTheMeridian"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> srm::BaseSRF_MapProjection::calculateConvergenceOfTheMeridian </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00158.htm">CoordSurf</a> &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>surf_coord</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the Convergence of the Meridian in radians at a position on the surface of the oblate spheroid RD. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a7" doxytag="srm::BaseSRF_MapProjection::calculateMapAzimuth"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> srm::BaseSRF_MapProjection::calculateMapAzimuth </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00158.htm">CoordSurf</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>src_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00158.htm">CoordSurf</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>des_coord</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the map azimuth in radians between two surface coordinates. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a6" doxytag="srm::BaseSRF_MapProjection::calculatePointDistortion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> srm::BaseSRF_MapProjection::calculatePointDistortion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00158.htm">CoordSurf</a> &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>surf_coord</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the point distortion at a position on the surface of the ellipsoid RD. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a4" doxytag="srm::BaseSRF_MapProjection::getExtendedValidGeodeticRegion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_MapProjection::getExtendedValidGeodeticRegion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00276.htm#a14">SRM_Integer</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>component</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>type</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>extended_lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>upper</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>extended_upper</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Get the Extended Valid Geodetic Region for this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>Given a coordinate component, the last invocation of this method or the setValidGeodeticRegion method determines the valid and extended valid intervals of the coordinate component values. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>component</em>&nbsp;</td><td>in: the coordinate component (1, 2, or 3) </td></tr>
    <tr><td valign=top><em>type</em>&nbsp;</td><td>out: the type of interval </td></tr>
    <tr><td valign=top><em>extended_lower</em>&nbsp;</td><td>out: the extended lower value of the interval </td></tr>
    <tr><td valign=top><em>lower</em>&nbsp;</td><td>out: the lower value of the interval </td></tr>
    <tr><td valign=top><em>upper</em>&nbsp;</td><td>out: the upper value of the interval </td></tr>
    <tr><td valign=top><em>extended_upper</em>&nbsp;</td><td>out: the extended_upper value of the interval </td></tr>
  </table>
</dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a3" doxytag="srm::BaseSRF_MapProjection::getValidGeodeticRegion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_MapProjection::getValidGeodeticRegion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00276.htm#a14">SRM_Integer</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>component</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>type</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>upper</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Get the Valid Geodetic Region for this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>Given a coordinate component, the last invocation of this method or the setExtendedValidGeodeticRegion method determines the valid and extended valid intervals of the coordinate component values. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>component</em>&nbsp;</td><td>in: the coordinate component (1 or 2) </td></tr>
    <tr><td valign=top><em>type</em>&nbsp;</td><td>out: the type of interval </td></tr>
    <tr><td valign=top><em>lower</em>&nbsp;</td><td>out: the lower value of the interval </td></tr>
    <tr><td valign=top><em>upper</em>&nbsp;</td><td>out: the upper value of the interval </td></tr>
  </table>
</dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a2" doxytag="srm::BaseSRF_MapProjection::setExtendedValidGeodeticRegion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_MapProjection::setExtendedValidGeodeticRegion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00276.htm#a14">SRM_Integer</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>component</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>type</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>extended_lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>upper</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>extended_upper</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set the Extended Valid Geodetic Region for this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>Given a coordinate component, the last invocation of this method or the setValidGeodeticRegion method determines the valid and extended valid intervals of the coordinate component values. <p>
Upper or Lower value is ignored if the interval is a semi-interval or unbounded. <p>
The Lower value must be strictly less than the Upper value. <p>
The Extended_Lower value must be strictly greater than the Lower value and the Extended_Upper value must be strictly smaller than the Lower value. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>component</em>&nbsp;</td><td>in: the coordinate component (1 or 2) </td></tr>
    <tr><td valign=top><em>type</em>&nbsp;</td><td>in: the type of interval </td></tr>
    <tr><td valign=top><em>extended_lower</em>&nbsp;</td><td>in: the extended lower value of the interval </td></tr>
    <tr><td valign=top><em>lower</em>&nbsp;</td><td>in: the lower value of the interval </td></tr>
    <tr><td valign=top><em>upper</em>&nbsp;</td><td>in: the upper value of the interval </td></tr>
    <tr><td valign=top><em>extended_upper</em>&nbsp;</td><td>in: the extended_upper value of the interval </td></tr>
  </table>
</dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a1" doxytag="srm::BaseSRF_MapProjection::setValidGeodeticRegion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_MapProjection::setValidGeodeticRegion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00276.htm#a14">SRM_Integer</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>component</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00277.htm#a1123">SRM_Interval_Type</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>type</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>upper</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set the Valid Region for this SRF in geodetic coordinates (lon/lat). 
<p>
<dl compact><dt><b>Note:</b></dt><dd>Given a coordinate component, the last invocation of this method or the setExtendedValidGeodeticRegion method determines the valid and extended valid intervals of the coordinate component values. <p>
Upper or Lower value is ignored if the interval is a semi-interval or unbounded. <p>
The Lower value must be strictly less than the Upper value. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>component</em>&nbsp;</td><td>in: the coordinate component (1 or 2) </td></tr>
    <tr><td valign=top><em>type</em>&nbsp;</td><td>in: the type of interval </td></tr>
    <tr><td valign=top><em>lower</em>&nbsp;</td><td>in: the lower value of the interval </td></tr>
    <tr><td valign=top><em>upper</em>&nbsp;</td><td>in: the upper value of the interval </td></tr>
  </table>
</dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="a00280.htm">BaseSRF.h</a></ul>
<hr size="1">
<table width="100%">
<tr valign="middle">
<td align="left"><strong>Spatial Reference Model C++ API</strong></td>
<td align="right"><strong>
Version 4.1.4 - July 1, 2011
</strong></td>
</tr>
<tr valign="middle">
<td align="left">Copyright &copy; 2011 <a href="http://www.sedris.org">SEDRIS</a>&#153;</td>
<td align="right">Docs by <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.3.2</td>
</tr>
</table>
</body>
</html>
