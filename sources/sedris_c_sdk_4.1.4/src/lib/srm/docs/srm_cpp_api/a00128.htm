<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Spatial Reference Model C++ API</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#ffffff">
<!-- SRM C++ SDK -->
<!-- SRM spec. 4.1 -->


<!-- Generated by Doxygen 1.3.2 -->
<div class="qindex"><a class="qindex" href="main.htm">Main&nbsp;Page</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="classes.htm">Alphabetical&nbsp;List</a> | <a class="qindex" href="annotated.htm">Compound&nbsp;List</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindex" href="functions.htm">Compound&nbsp;Members</a> | <a class="qindex" href="globals.htm">File&nbsp;Members</a></div>
<h1>srm::BaseSRF_WithTangentPlaneSurface Class Reference</h1>The <a class="el" href="a00128.htm">BaseSRF_WithTangentPlaneSurface</a> abstract class is the base class for the 3D SRFs with tangent plane surfaces.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="a00280.htm">BaseSRF.h</a>&gt;</code>
<p>
Inheritance diagram for srm::BaseSRF_WithTangentPlaneSurface:<p><center><img src="a00410.png" border="0" usemap="#a00411" alt="Inheritance graph"></center>
<map name="a00411">
<area href="a00186.htm" shape="rect" coords="5,237,315,267" alt="">
<area href="a00187.htm" shape="rect" coords="339,237,597,267" alt="">
<area href="a00188.htm" shape="rect" coords="621,237,877,267" alt="">
<area href="a00125.htm" shape="rect" coords="403,83,533,112" alt="">
<area href="a00123.htm" shape="rect" coords="415,5,521,35" alt="">
</map>
<center><font size="2">[<a target="top" href="graph_legend.htm">legend</a>]</font></center>Collaboration diagram for srm::BaseSRF_WithTangentPlaneSurface:<p><center><img src="a00412.png" border="0" usemap="#a00413" alt="Collaboration graph"></center>
<map name="a00413">
<area href="a00125.htm" shape="rect" coords="72,83,203,112" alt="">
<area href="a00123.htm" shape="rect" coords="84,5,191,35" alt="">
</map>
<center><font size="2">[<a target="top" href="graph_legend.htm">legend</a>]</font></center><a href="a00006.htm">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="a0" doxytag="srm::BaseSRF_WithTangentPlaneSurface::isA"></a>
virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a0">isA</a> (<a class="el" href="a00123.htm#w31">SRF_ClassType</a> type) const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if this SRF is of the given class type. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="a00158.htm">CoordSurf</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a1">createSurfaceCoordinate</a> (<a class="el" href="a00276.htm#a17">SRM_Long_Float</a> coord_surf_comp1, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> coord_surf_comp2)=0</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a surface coordinate object. </em> <a href="#a1"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a2">getSurfaceCoordinateValues</a> (const <a class="el" href="a00158.htm">CoordSurf</a> &amp;coord_surf, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;coord_surf_comp1, <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;coord_surf_comp2) const</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Retrieves a coordinate surface component values. </em> <a href="#a2"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a3">freeSurfaceCoordinate</a> (<a class="el" href="a00158.htm">CoordSurf</a> *coord_surf)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Frees a surface coordinate object. </em> <a href="#a3"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a4">getAssociatedSurfaceCoordinate</a> (const <a class="el" href="a00134.htm">Coord3D</a> &amp;coord, <a class="el" href="a00158.htm">CoordSurf</a> &amp;on_surface_coord)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns a surface coordinate associated with a 3D coordinate. </em> <a href="#a4"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a5">getPromotedSurfaceCoordinate</a> (const <a class="el" href="a00158.htm">CoordSurf</a> &amp;surf_coord, <a class="el" href="a00134.htm">Coord3D</a> &amp;three_d_coord)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns a 3D coordinate representing the same location as specified by a surface coordinate. </em> <a href="#a5"></a><em><br><br></td></tr>
<tr><td colspan=2><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#e0">calculateEuclideanDistance</a> (const <a class="el" href="a00158.htm">CoordSurf</a> &amp;coord1, const <a class="el" href="a00158.htm">CoordSurf</a> &amp;coord2)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the euclidean distance (in metres) between two surface coordinates. </em> <a href="#e0"></a><em><br><br></td></tr>
<tr><td colspan=2><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b0" doxytag="srm::BaseSRF_WithTangentPlaneSurface::BaseSRF_WithTangentPlaneSurface"></a>
&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#b0">BaseSRF_WithTangentPlaneSurface</a> (void *impl)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">No stack allocation. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b1" doxytag="srm::BaseSRF_WithTangentPlaneSurface::operator="></a>
<a class="el" href="a00128.htm">BaseSRF_WithTangentPlaneSurface</a> &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#b1">operator=</a> (const <a class="el" href="a00128.htm">BaseSRF_WithTangentPlaneSurface</a> &amp;)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">No copy constructor. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b2" doxytag="srm::BaseSRF_WithTangentPlaneSurface::~BaseSRF_WithTangentPlaneSurface"></a>
virtual&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#b2">~BaseSRF_WithTangentPlaneSurface</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Use <a class="el" href="a00123.htm#a0">release()</a>. <br><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
The <a class="el" href="a00128.htm">BaseSRF_WithTangentPlaneSurface</a> abstract class is the base class for the 3D SRFs with tangent plane surfaces. 
<p>
SRFs are allocated by the API, and when no longer needed they should be released by calling the <a class="el" href="a00123.htm#a0">release()</a> method. <dl compact><dt><b>Author:</b></dt><dd></dd></dl>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="a00125.htm">BaseSRF_3D</a>, <a class="el" href="a00123.htm">BaseSRF</a> </dd></dl>

<p>

<p>
Definition at line <a class="el" href="a00280.htm#l01058">1058</a> of file <a class="el" href="a00280.htm">BaseSRF.h</a>.<hr><h2>Member Function Documentation</h2>
<a name="e0" doxytag="srm::BaseSRF_WithTangentPlaneSurface::calculateEuclideanDistance"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00276.htm#a17">SRM_Long_Float</a> srm::BaseSRF_WithTangentPlaneSurface::calculateEuclideanDistance </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00158.htm">CoordSurf</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>coord1</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00158.htm">CoordSurf</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>coord2</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the euclidean distance (in metres) between two surface coordinates. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The input coordinates can be created from any SRF. </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a1" doxytag="srm::BaseSRF_WithTangentPlaneSurface::createSurfaceCoordinate"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="a00158.htm">CoordSurf</a>* srm::BaseSRF_WithTangentPlaneSurface::createSurfaceCoordinate </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_surf_comp1</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_surf_comp2</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [pure virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates a surface coordinate object. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>

<p>
Implemented in <a class="el" href="a00186.htm#a1">srm::SRF_LocalTangentSpaceAzimuthalSpherical</a>, <a class="el" href="a00187.htm#a1">srm::SRF_LocalTangentSpaceCylindrical</a>, and <a class="el" href="a00188.htm#a1">srm::SRF_LocalTangentSpaceEuclidean</a>.    </td>
  </tr>
</table>
<a name="a3" doxytag="srm::BaseSRF_WithTangentPlaneSurface::freeSurfaceCoordinate"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_WithTangentPlaneSurface::freeSurfaceCoordinate </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00158.htm">CoordSurf</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>coord_surf</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Frees a surface coordinate object. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a4" doxytag="srm::BaseSRF_WithTangentPlaneSurface::getAssociatedSurfaceCoordinate"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_WithTangentPlaneSurface::getAssociatedSurfaceCoordinate </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00158.htm">CoordSurf</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>on_surface_coord</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns a surface coordinate associated with a 3D coordinate. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a5" doxytag="srm::BaseSRF_WithTangentPlaneSurface::getPromotedSurfaceCoordinate"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_WithTangentPlaneSurface::getPromotedSurfaceCoordinate </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00158.htm">CoordSurf</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>surf_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00134.htm">Coord3D</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>three_d_coord</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns a 3D coordinate representing the same location as specified by a surface coordinate. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a2" doxytag="srm::BaseSRF_WithTangentPlaneSurface::getSurfaceCoordinateValues"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void srm::BaseSRF_WithTangentPlaneSurface::getSurfaceCoordinateValues </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00158.htm">CoordSurf</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_surf</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_surf_comp1</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00276.htm#a17">SRM_Long_Float</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_surf_comp2</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves a coordinate surface component values. 
<p>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws <a class="el" href="a00171.htm">srm::Exception</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="a00280.htm">BaseSRF.h</a></ul>
<hr size="1">
<table width="100%">
<tr valign="middle">
<td align="left"><strong>Spatial Reference Model C++ API</strong></td>
<td align="right"><strong>
Version 4.1.4 - July 1, 2011
</strong></td>
</tr>
<tr valign="middle">
<td align="left">Copyright &copy; 2011 <a href="http://www.sedris.org">SEDRIS</a>&#153;</td>
<td align="right">Docs by <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.3.2</td>
</tr>
</table>
</body>
</html>
