<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML lang="en">
<head>
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Interface Template</title>
<link rel="stylesheet" href="../../../styles/SDK_SEDRIS.css" type="text/css">
</head>
<body>

<a name="Top"></a>

<div class="CenterDiv">
<table border="2" class="doc_set_header">
<tr><th>
<big><big>The SEDRIS Data Representation Model</big></big>
<br>
<!-- DRM spec. 4.1 -->
<font color="#ffffff">
APPENDIX A - Classes
</font>
<br>
<font color="#ffffff">
Interface Template
</font>
</th></tr>
</table></div>

<!-- SEDRIS C++ SDK Release 4.1.4 - July 1, 2011 -->

<h2>Class Name: Interface Template</h2>
<h3>Superclass - <a href="SEDRISAbstractBase.htm">&lt;SEDRIS Abstract Base&gt;</a></h3>
<h3>Subclasses</h3>
    This DRM class is concrete and has no subclasses.
<h3>Definition</h3>
<P>
 An instance of this DRM class is always a component of a
 <A href="Model.htm">&lt;Model&gt;</A> instance or
 <A href="EnvironmentRoot.htm">&lt;Environment Root&gt;</A>
 instance. The scope of that
 <A href="Model.htm">&lt;Model&gt;</A> instance or
 <A href="EnvironmentRoot.htm">&lt;Environment Root&gt;</A> instance
 is hereafter referred to as
 <I>the given scope</I> in this definition.
</P><P>
 An instance of this DRM class provides, for the given scope,
 a means of accessing all <A href="Variable.htm">&lt;Variable&gt;</A>
 instances within that scope, thus allowing manipulation of the
 targets of the affected <A href="ControlLink.htm">&lt;Control Link&gt;</A> instances.
 These <A href="Variable.htm">&lt;Variable&gt;</A> instances are associated with
 the <A href="InterfaceTemplate.htm">&lt;Interface Template&gt;</A> instance
 in an ordered list. Each is also aggregated by at least one
 <A href="ControlLink.htm">&lt;Control Link&gt;</A> instance in the given scope:
</P>
<OL type='a'>
<LI><P>
 For a <A href="Model.htm">&lt;Model&gt;</A> instance that is instanced by some
 DRM object MI (either a
 <A href="FeatureModelInstance.htm">&lt;Feature Model Instance&gt;</A> instance
 or a
 <A href="GeometryModelInstance.htm">&lt;Geometry Model Instance&gt;</A> instance),
 values are specified for each of the <A href="Variable.htm">&lt;Variable&gt;</A>
 instances associated with the
 <A href="InterfaceTemplate.htm">&lt;Interface Template&gt;</A> component of the
 <A href="Model.htm">&lt;Model&gt;</A> instance.
</P><P>
 Each such value is specified by an <A href="Expression.htm">&lt;Expression&gt;</A> instance
 that is aggregated by <span class="ConstructName">MI</span>. The
 <A href="ModelInstanceTemplateIndex.htm">&lt;Model Instance Template Index&gt;</A>
 link object lying between the <A href="Expression.htm">&lt;Expression&gt;</A> instance
 and <span class="ConstructName">MI</span>
 specifies the particular <A href="Variable.htm">&lt;Variable&gt;</A>
 instance being set by specifying its index within the ordered list
 of <A href="Variable.htm">&lt;Variable&gt;</A> instances associated with the
 <A href="InterfaceTemplate.htm">&lt;Interface Template&gt;</A> component
 of the <A href="Model.htm">&lt;Model&gt;</A> instance.
</P><P class=Note>
NOTE&nbsp; 
 The <A href="Expression.htm">&lt;Expression&gt;</A> instance may be a
 <A href="Variable.htm">&lt;Variable&gt;</A> instance in the instancing scope or a
 <A href="Function.htm">&lt;Function&gt;</A> instance of some kind, not just a
 <A href="Literal.htm">&lt;Literal&gt;</A> instance.
</p></LI>
<LI><P>
 For an <A href="EnvironmentRoot.htm">&lt;Environment Root&gt;</A> instance,
 an <A href="InterfaceTemplate.htm">&lt;Interface Template&gt;</A> component provides
 a means for environmental <A href="Variable.htm">&lt;Variable&gt;</A> instances to be
 accessed by the user such as a <A href="Variable.htm">&lt;Variable&gt;</A> instance
 for <A href="../../../../src/lib/edcs/docs/dictionary/EAC_W.htm#EAC_WIND_SPEED">EAC_WIND_SPEED</A>.
</P></LI>
</OL>

<h3>Primary Page in DRM Diagram:</h3>
<UL>
<LI><A href="sheet16.pdf"><strong>16</strong></A>
</LI>
</UL>

<h3>Secondary Pages in DRM Diagram:</h3>
<UL>
<LI><A href="sheet01.pdf"><strong>1</strong></A>
</LI>
<LI><A href="sheet02.pdf"><strong>2</strong></A>
</LI>
</UL>

<h3>Example</h3>
<OL>
<LI><P>
 Consider a <A href="Model.htm">&lt;Model&gt;</A> instance <span class="ConstructName">T</span> representing
 a tank that is is comprised of separate tank body, turret, and cannon
 submodels, each instantiated by <span class="ConstructName">T</span> as depicted in
 <a href="#Figure26">Figure 26</a>.
</P>
<DIV align="center">
<p>
<A name="Figure26"></A>
<IMG SRC="../Images/InterfaceTemplate_Ex1.png"
     ALT="Interface Template, Example 1">
</p>
<p class=FigureCaption>Figure 26 &#8212; &lt;DRM Interface Template&gt; example</p>
</DIV>
<P>
 The turret can be dynamically rotated and the cannon can be dynamically
 elevated. Both movements can be controlled separately.
</P><P>
 Both movements are rotations, so each of the turret and cannon
 submodels have <A href="Rotation.htm">&lt;Rotation&gt;</A> instances at
 appropriate points in their hierarchies. Each of these
 <A href="Rotation.htm">&lt;Rotation&gt;</A> instances has a
 <A href="RotationControlLink.htm">&lt;Rotation Control Link&gt;</A> component, which
 in turn has a <A href="Variable.htm">&lt;Variable&gt;</A> component that
 specifies the current rotation. The values supplied for these
 <A href="Variable.htm">&lt;Variable&gt;</A> instances are adjusted from
 outside the submodels that contain them. Consequently, the
 <A href="Variable.htm">&lt;Variable&gt;</A> instances in each submodel are
 associated with the <A href="InterfaceTemplate.htm">&lt;Interface Template&gt;</A> component
 of its submodel.
</P><P>
 However, the turret and cannon rotations are controlled from outside
 the entire tank <A href="Model.htm">&lt;Model&gt;</A> instance <span class="ConstructName">T</span>.
 Therefore, it is possible to set rotation values using
 the <A href="InterfaceTemplate.htm">&lt;Interface Template&gt;</A> component of
 <span class="ConstructName">T</span>,
 so <span class="ConstructName">T</span> contains a turret rotation
 <A href="Variable.htm">&lt;Variable&gt;</A> instance and a cannon elevation
 <A href="Variable.htm">&lt;Variable&gt;</A> instance. These <A href="Variable.htm">&lt;Variable&gt;</A> instances
 are associated with the <A href="InterfaceTemplate.htm">&lt;Interface Template&gt;</A> component of
 <span class="ConstructName">T</span>. Each of the two
 <A href="Variable.htm">&lt;Variable&gt;</A> instances is also aggregated by the
 <A href="GeometryModelInstance.htm">&lt;Geometry Model Instance&gt;</A> instance that
 instances the submodel to which they relate.
</P><P>
 Finally, it is necessary to tie the <A href="Variable.htm">&lt;Variable&gt;</A> instances in
 <span class="ConstructName">T</span> to the equivalent <A href="Variable.htm">&lt;Variable&gt;</A> instances
 in each of the submodels. This is done using the
 <A href="ModelInstanceTemplateIndex.htm">&lt;Model Instance Template Index&gt;</A>
 link object for each tank <A href="Variable.htm">&lt;Variable&gt;</A> instance. The
 <A href="ModelInstanceTemplateIndex.htm">&lt;Model Instance Template Index&gt;</A> link object associated with
 the turret rotation <A href="Variable.htm">&lt;Variable&gt;</A> instance of
 <span class="ConstructName">T</span>
 references the equivalent <A href="Variable.htm">&lt;Variable&gt;</A> instance's entry in the
 turret <A href="Model.htm">&lt;Model&gt;</A> instance's <A href="InterfaceTemplate.htm">&lt;Interface Template&gt;</A> component.
 Similarly, the <A href="ModelInstanceTemplateIndex.htm">&lt;Model Instance Template Index&gt;</A>
 link object associated with <span class="ConstructName">T</span>'s cannon elevation
 <A href="Variable.htm">&lt;Variable&gt;</A> instance references the equivalent
 <A href="Variable.htm">&lt;Variable&gt;</A> instance's entry in the
 <A href="InterfaceTemplate.htm">&lt;Interface Template&gt;</A> component of the
 cannon <A href="Model.htm">&lt;Model&gt;</A> instance.
</P><P>
 Consequently, <span class="ConstructName">T</span>'s <A href="InterfaceTemplate.htm">&lt;Interface Template&gt;</A>
 component allows the turret rotation and cannon elevation to be set from
 outside <span class="ConstructName">T</span>. The values set in <span class="ConstructName">T</span>
 themselves set values in the <A href="Variable.htm">&lt;Variable&gt;</A> instances within the
 turret and cannon submodels, thereby rotating the turret and elevating
 the cannon as required.
</P></LI>
<LI><P>
 Consider a building <A href="Model.htm">&lt;Model&gt;</A> instance that may be instanced on
 terrain polygons that are at various different orientations. Each building
 wall meets the terrain, leaving no gaps. This means that the lengths of
 the walls of the building are adjusted by different amounts in each
 instance to match the slope of the ground.
</P><P>
 The location of each <A href="Vertex.htm">&lt;Vertex&gt;</A> component of a
 <A href="Polygon.htm">&lt;Polygon&gt;</A> instance can be adjusted by using
 an <A href="LSR3DLocationControlLink.htm">&lt;LSR 3D Location Control Link&gt;</A>
 instance aggregated by the <A href="LSR3DLocation.htm">&lt;LSR 3D Location&gt;</A>
 instance that specifies the location of the <A href="Vertex.htm">&lt;Vertex&gt;</A> instance.
 Each <A href="LSR3DLocationControlLink.htm">&lt;LSR 3D Location Control Link&gt;</A>
 instance has a <A href="Variable.htm">&lt;Variable&gt;</A> component that specifies the new
 location value. These <A href="Variable.htm">&lt;Variable&gt;</A> instances are set separately
 for each instance to match
 the terrain upon which the building is positioned. The
 <A href="Variable.htm">&lt;Variable&gt;</A> instances are set from outside the
 building <A href="Model.htm">&lt;Model&gt;</A> instance so all of these
 <A href="Variable.htm">&lt;Variable&gt;</A> instances
 in the building <A href="Model.htm">&lt;Model&gt;</A> instance are associated
 with the <A href="InterfaceTemplate.htm">&lt;Interface Template&gt;</A> component of the
 <A href="Model.htm">&lt;Model&gt;</A> instance.
</P><P>
 When the building is instanced, using a
 <A href="GeometryModelInstance.htm">&lt;Geometry Model Instance&gt;</A> instance
 <span class="ConstructName">GMI</span>, the values of the
 <A href="Variable.htm">&lt;Variable&gt;</A> instances can be set for
 <span class="ConstructName">GMI</span> using <A href="Expression.htm">&lt;Expression&gt;</A> components
 of <span class="ConstructName">GMI</span>. When the terrain on which
 <span class="ConstructName">GMI</span> stands is known and fixed, these
 <A href="Expression.htm">&lt;Expression&gt;</A> components can be
 <A href="Literal.htm">&lt;Literal&gt;</A> components. Each
 <A href="Literal.htm">&lt;Literal&gt;</A> component is related to the
 <A href="Variable.htm">&lt;Variable&gt;</A> instance for which it is
 specifying a value through a
 <A href="ModelInstanceTemplateIndex.htm">&lt;Model Instance Template Index&gt;</A>
 link object that references the
 <A href="Variable.htm">&lt;Variable&gt;</A> instance by way of the
 <A href="InterfaceTemplate.htm">&lt;Interface Template&gt;</A> component of the
 building <A href="Model.htm">&lt;Model&gt;</A> instance.
</P></LI>
</OL>

<h3>FAQs</h3>
<p>
No FAQs supplied.
</p>
<h3>Constraints</h3>
<UL>
<LI>
<a href="../constraints/PublishableObject.htm">&lt;&lt;Publishable Object&gt;&gt;</a> 
</LI>
<LI>
<a href="../constraints/ConstraintsOnAssociates.htm">&lt;&lt;Constraints On Associates&gt;&gt;</a> 
</LI>
<LI>
<a href="../constraints/ConstraintsOnComponents.htm">&lt;&lt;Constraints On Components&gt;&gt;</a> 
</LI>
</UL>
<h3>Associated with (two-way)</h3>
<UL>
<li>one or more {ordered} <a href="Variable.htm">&lt;Variable&gt;</a> instances</li>
</UL>

<h3>Component of (two-way)</h3>
<UL>
<li>zero or one <a href="EnvironmentRoot.htm">&lt;Environment Root&gt;</a> instance</li>
<li>zero or one <a href="Model.htm">&lt;Model&gt;</a> instance</li>
</UL>

<h2>Inherited Field Elements</h2>
This class has no inherited field elements.
<h2><a name="field">Field Elements</a></h2>
<table class="Field">
<tr class="Field">
<td class="FieldType"><p class="FieldType"><a href="../types/SE_String.htm">SE_String</a></p></td>
<td class="FieldName"><p class="FieldName"><a name="description">description</a>;</p></td>
<td class="FieldRange"><p class="FieldRange"><sup><A href="#Notes_description">1</A></sup></p></td>
</tr>
</table>
<hr>
<h2>Notes</h2>
<h3>Fields Notes</h3>
<h4><a href="#description" name="Notes_description">description</a></h4>
<P>
 The <A href="#description">description</A>
 field specifies a brief description.
</P>

<hr>
<strong>Prev:</strong> <A href="InlineColour.htm">Inline Colour</A>.
<strong>Next:</strong> <A href="IntervalAxis.htm">Interval Axis</A>.
<strong>Up:</strong><A href="index.htm">Index</A>.
<br><br>
<table border="2" class="doc_set_header">
<tr><td>
<table border="0" class="doc_set_header">
<tr>
<td align="left" class="doc_set_footer">
Last updated: July 1, 2011
</td>
<td align="right" class="doc_set_footer">
Copyright &copy; 2011 <a href="http://www.sedris.org">SEDRIS</a>&#153;

</td></tr>
</table>
</td></tr>
</table>
</body>
</html>
