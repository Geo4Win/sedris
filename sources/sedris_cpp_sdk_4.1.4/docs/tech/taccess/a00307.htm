<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>SEDRIS Transmittal Access C++ API</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#FFFFFF">

<!-- Generated by Doxygen 1.4.7-20061004 -->
<div class="tabs">
  <ul>
    <li><a href="main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="modules.htm"><span>Modules</span></a></li>
    <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
    <li id="current"><a href="classes.htm"><span>Classes</span></a></li>
    <li><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="classes.htm"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="a00635.htm">sedris</a>::<a class="el" href="a00307.htm">seException</a></div>
<h1>sedris::seException Class Reference</h1><!-- doxytag: class="sedris::seException" -->General exception handling class.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;seException.h&gt;</code>
<p>
<a href="a01576.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Types</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom">{ <a class="el" href="a00307.htm#b719e66f244c4c455817b94b68c3f2af3b501b751470dd826b3a9d9e1e111466">MAX_EXCEPTION_STR_LEN</a> =  2000
 }</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d">seExceptionCode</a> { <br>
&nbsp;&nbsp;<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d09b242a4d92c48ba1f451bb2785c774a">NOT_IMPLEMENTED</a> =  0, 
<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d6679b66d68f9eea46181d2344b6bc3c7">DELETED_OBJECT</a> =  2, 
<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d7cff088c34ed53740e5d02867506ddf9">INVALID_ACCESS_MODE</a> =  4, 
<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8de465a06efc2d8d949b85ca05293ee7d5">INVALID_OBJECT_LABEL</a> =  5, 
<br>
&nbsp;&nbsp;<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d367c7190b685d44720a0a097ef07a416">INVALID_TRANSMITTAL_URN</a> =  6, 
<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8de7e7935eb10104b81bce1caf574b4154">TRANSMITTAL_INACCESSIBLE</a> =  9, 
<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d3e30945cc7c969027da39a5fbd9da8d4">UNPUBLISHED_OBJECT</a> =  10, 
<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d3513a14617b6fb38c32ce4f18f7c1116">UNRESOLVED_TRANSMITTAL</a> =  11, 
<br>
&nbsp;&nbsp;<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d498265d8a19aaf74fd23c3444e902627">UNRESOLVED_INPUT_OBJECT</a> =  12, 
<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8dad3838c0d50f44eb6be883bb40ff1ea1">UNSUPPORTED_ENCODING</a> =  14, 
<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8ddcf67778bdd04fa0cfd7809b1f17ea3d">INACTIONABLE_FAILURE</a> =  1000, 
<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d801d8c71da74a43617639a19208b88ad">OUT_OF_MEMORY</a> =  1001, 
<br>
&nbsp;&nbsp;<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8db4adaef38957bf105d496ba3e6d143cb">INVALID_HANDLE</a>, 
<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8da5d3538ea17b13c758b6bef0720410d3">FILE_ERROR</a>, 
<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d739ba221f2028fcf64456e6cd69d592e">INVALID_DRM_CLASS</a>
<br>
 }</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Exception enumeration.  <a href="a00307.htm#4717f332ced1fc7309d838e18fceca8d">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="12cfde3c70d5d214ae32c247adbbfa62"></a><!-- doxytag: member="sedris::seException::seException" ref="12cfde3c70d5d214ae32c247adbbfa62" args="(seExceptionCode code)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00307.htm#12cfde3c70d5d214ae32c247adbbfa62">seException</a> (<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d">seExceptionCode</a> code)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Create exception with code only, no details description. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="88ff4b84f9d18949827295092b7f7399"></a><!-- doxytag: member="sedris::seException::seException" ref="88ff4b84f9d18949827295092b7f7399" args="(seExceptionCode code, const char *what)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00307.htm#88ff4b84f9d18949827295092b7f7399">seException</a> (<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d">seExceptionCode</a> code, const char *what)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Create exception with code and full description. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="54630e3581f5bfa96b67511320146f11"></a><!-- doxytag: member="sedris::seException::seException" ref="54630e3581f5bfa96b67511320146f11" args="(const seException &amp;other)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00307.htm#54630e3581f5bfa96b67511320146f11">seException</a> (const <a class="el" href="a00307.htm">seException</a> &amp;other)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Create exception as a copy of another. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="817e428894242e7e958d2e23fa31fc42"></a><!-- doxytag: member="sedris::seException::~seException" ref="817e428894242e7e958d2e23fa31fc42" args="()" -->
virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00307.htm#817e428894242e7e958d2e23fa31fc42">~seException</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c296657511d5c007971e6b97e9d14f13"></a><!-- doxytag: member="sedris::seException::operator=" ref="c296657511d5c007971e6b97e9d14f13" args="(const seException &amp;other)" -->
<a class="el" href="a00307.htm">seException</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00307.htm#c296657511d5c007971e6b97e9d14f13">operator=</a> (const <a class="el" href="a00307.htm">seException</a> &amp;other)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Copy exception data from another. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="66daea08fbf11d64124cab6ea280a2f4"></a><!-- doxytag: member="sedris::seException::setCodeAndWhat" ref="66daea08fbf11d64124cab6ea280a2f4" args="(seExceptionCode code, const char *what)" -->
virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00307.htm#66daea08fbf11d64124cab6ea280a2f4">setCodeAndWhat</a> (<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d">seExceptionCode</a> code, const char *what)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the code and description information. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a548e22d46791300f2bb9c2836d2b15b"></a><!-- doxytag: member="sedris::seException::getCode" ref="a548e22d46791300f2bb9c2836d2b15b" args="() const " -->
virtual <a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d">seExceptionCode</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00307.htm#a548e22d46791300f2bb9c2836d2b15b">getCode</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the exception code value. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="829b784da028e597eb8783860bfd8d1c"></a><!-- doxytag: member="sedris::seException::getWhat" ref="829b784da028e597eb8783860bfd8d1c" args="() const " -->
virtual const char *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00307.htm#829b784da028e597eb8783860bfd8d1c">getWhat</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the exception description string. <br></td></tr>
<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6d20000e4590cafcac72dff1a6f683bc"></a><!-- doxytag: member="sedris::seException::_code" ref="6d20000e4590cafcac72dff1a6f683bc" args="" -->
<a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d">seExceptionCode</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00307.htm#6d20000e4590cafcac72dff1a6f683bc">_code</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Exception error code. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="26df86e8786136819a00dee487cbe71a"></a><!-- doxytag: member="sedris::seException::_what" ref="26df86e8786136819a00dee487cbe71a" args="[MAX_EXCEPTION_STR_LEN+1]" -->
char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00307.htm#26df86e8786136819a00dee487cbe71a">_what</a> [MAX_EXCEPTION_STR_LEN+1]</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Exception error description. <br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
General exception handling class. 
<p>
This is the general exception class thrown from failed methods. An exception typically contains an error code and a description string with more details on the exception.<p>
The error codes are based on the data type SE_Status_Code, but the actual code values are specific to the C++ API. <dl class="author" compact><dt><b>Author:</b></dt><dd>Warren Macchi (Accent Geographic) </dd></dl>

<p>
<hr><h2>Member Enumeration Documentation</h2>
<a class="anchor" name="b719e66f244c4c455817b94b68c3f2af"></a><!-- doxytag: member="sedris::seException::@0" ref="b719e66f244c4c455817b94b68c3f2af" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl compact><dt><b>Enumerator: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" name="b719e66f244c4c455817b94b68c3f2af3b501b751470dd826b3a9d9e1e111466"></a><!-- doxytag: member="MAX_EXCEPTION_STR_LEN" ref="b719e66f244c4c455817b94b68c3f2af3b501b751470dd826b3a9d9e1e111466" args="" -->MAX_EXCEPTION_STR_LEN</em>&nbsp;</td><td>
Maximum description string length in an <a class="el" href="a00307.htm">seException</a>. </td></tr>
</table>
</dl>

</div>
</div><p>
<a class="anchor" name="4717f332ced1fc7309d838e18fceca8d"></a><!-- doxytag: member="sedris::seException::seExceptionCode" ref="4717f332ced1fc7309d838e18fceca8d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="a00307.htm#4717f332ced1fc7309d838e18fceca8d">sedris::seException::seExceptionCode</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Exception enumeration. 
<p>
<dl compact><dt><b>Enumerator: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8d09b242a4d92c48ba1f451bb2785c774a"></a><!-- doxytag: member="NOT_IMPLEMENTED" ref="4717f332ced1fc7309d838e18fceca8d09b242a4d92c48ba1f451bb2785c774a" args="" -->NOT_IMPLEMENTED</em>&nbsp;</td><td>
The functionality is currently unimplemented. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8d6679b66d68f9eea46181d2344b6bc3c7"></a><!-- doxytag: member="DELETED_OBJECT" ref="4717f332ced1fc7309d838e18fceca8d6679b66d68f9eea46181d2344b6bc3c7" args="" -->DELETED_OBJECT</em>&nbsp;</td><td>
Object has been deleted from the transmittal. 
<p>
This status code is returned when an object handle to an object that has been removed from a transmittal is passed in to an API function. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8d7cff088c34ed53740e5d02867506ddf9"></a><!-- doxytag: member="INVALID_ACCESS_MODE" ref="4717f332ced1fc7309d838e18fceca8d7cff088c34ed53740e5d02867506ddf9" args="" -->INVALID_ACCESS_MODE</em>&nbsp;</td><td>
Attempt to write to a non-editable transmittal. 
<p>
To be returned if access to the transmittal is prohibited in the mode used to open the transmittal.<p>
This could occur if <ol>
<li>
the access mode specified was create or update and the file was marked read-only, or </li>
<li>
no access was permitted for the account running the application, or </li>
<li>
create or update mode was requested but the API implementation did not support the write capability, or </li>
<li>
a function requiring create or update mode was invoked for an object in a transmittal that was opened in read-only mode. </li>
</ol>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="a00315.htm#92489ee8a7ef5af47163deddb7876f81">seTransmittal::getAccessMode()</a> </dd></dl>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8de465a06efc2d8d949b85ca05293ee7d5"></a><!-- doxytag: member="INVALID_OBJECT_LABEL" ref="4717f332ced1fc7309d838e18fceca8de465a06efc2d8d949b85ca05293ee7d5" args="" -->INVALID_OBJECT_LABEL</em>&nbsp;</td><td>
Object (ITR) label is invalid. 
<p>
This status code is returned when the function received as an argument a label that was not valid in accordance with label syntax rules, or when an attempt has been made to publish a DRM object with a label that is already in use. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="a00313.htm#4ab4f8fb03e7849e83fa3ddab0c8c5f3">seObject::publish()</a> </dd></dl>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8d367c7190b685d44720a0a097ef07a416"></a><!-- doxytag: member="INVALID_TRANSMITTAL_URN" ref="4717f332ced1fc7309d838e18fceca8d367c7190b685d44720a0a097ef07a416" args="" -->INVALID_TRANSMITTAL_URN</em>&nbsp;</td><td>
Transmittal URN is invalid. 
<p>
This status code is returned when a parameter representing a transmittal name did not specify a name that was valid according to the formal SEDRIS namespace specification. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="a00316.htm#ce32f762f4b72693832bcf8fc23e5312">seWorkspace::resolveTransmittalURN()</a> </dd></dl>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8de7e7935eb10104b81bce1caf574b4154"></a><!-- doxytag: member="TRANSMITTAL_INACCESSIBLE" ref="4717f332ced1fc7309d838e18fceca8de7e7935eb10104b81bce1caf574b4154" args="" -->TRANSMITTAL_INACCESSIBLE</em>&nbsp;</td><td>
Transmittal file could not be found. 
<p>
This status code is returned by the open-transmittal functions if the resolved file location was not accessible by the API. This can occur if the file was opened for READ_ONLY or UPDATE access and the file does not exist. It can also occur if the file location specified a non-local file and the API had no transport mechanism available capable of accessing the remote file. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="a00316.htm#b636e86386404715cd6b56f226fd87aa">seWorkspace::openTransmittalByFile()</a> </dd></dl>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8d3e30945cc7c969027da39a5fbd9da8d4"></a><!-- doxytag: member="UNPUBLISHED_OBJECT" ref="4717f332ced1fc7309d838e18fceca8d3e30945cc7c969027da39a5fbd9da8d4" args="" -->UNPUBLISHED_OBJECT</em>&nbsp;</td><td>
ITR reference points to un unpublished object. 
<p>
This status code is returned when an object is encountered (while attempting to process an inter-transmittal reference) that is not published by its transmittal. <dl class="note" compact><dt><b>Note:</b></dt><dd>To be available for Inter-Transmittal Reference, an object must be published. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="a00313.htm#4ab4f8fb03e7849e83fa3ddab0c8c5f3">seObject::publish()</a> </dd></dl>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8d3513a14617b6fb38c32ce4f18f7c1116"></a><!-- doxytag: member="UNRESOLVED_TRANSMITTAL" ref="4717f332ced1fc7309d838e18fceca8d3513a14617b6fb38c32ce4f18f7c1116" args="" -->UNRESOLVED_TRANSMITTAL</em>&nbsp;</td><td>
Unresolvable transmittal reference. 
<p>
This status code is returned when a reference to a transmittal is encountered that cannot be resolved. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="a00316.htm#ce32f762f4b72693832bcf8fc23e5312">seWorkspace::resolveTransmittalURN()</a>, <a class="el" href="a00316.htm#daf9a7c55fd4862fa52288a73ab1600d">seWorkspace::setITRResolverPath()</a> </dd></dl>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8d498265d8a19aaf74fd23c3444e902627"></a><!-- doxytag: member="UNRESOLVED_INPUT_OBJECT" ref="4717f332ced1fc7309d838e18fceca8d498265d8a19aaf74fd23c3444e902627" args="" -->UNRESOLVED_INPUT_OBJECT</em>&nbsp;</td><td>
An unresolved object was used in the operation. 
<p>
To be returned when the caller has provided an unresolved object to a function that requires a resolved object. For example, attempting to access the fields of an unresolved object. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8dad3838c0d50f44eb6be883bb40ff1ea1"></a><!-- doxytag: member="UNSUPPORTED_ENCODING" ref="4717f332ced1fc7309d838e18fceca8dad3838c0d50f44eb6be883bb40ff1ea1" args="" -->UNSUPPORTED_ENCODING</em>&nbsp;</td><td>
The transmittal encoding format is not supported. 
<p>
This status code is returned when a transmittal was requested in an encoding that is not supported by the implementation(s) of the SEDRIS API linked to the application. <dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="a00315.htm#d80f6639e65e65d19ee0fa4ac9f4a208">seTransmittal::getEncoding()</a> </dd></dl>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8ddcf67778bdd04fa0cfd7809b1f17ea3d"></a><!-- doxytag: member="INACTIONABLE_FAILURE" ref="4717f332ced1fc7309d838e18fceca8ddcf67778bdd04fa0cfd7809b1f17ea3d" args="" -->INACTIONABLE_FAILURE</em>&nbsp;</td><td>
A general or unknown inactionable condition. 
<p>
This status code is returned to indicate a general, unknown, or other error for which there is no meaningful branch that the application code could make. This status code is returned when any invalid parameters are passed into API functions. <dl class="note" compact><dt><b>Note:</b></dt><dd>The error description may contain more detailed information. </dd></dl>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8d801d8c71da74a43617639a19208b88ad"></a><!-- doxytag: member="OUT_OF_MEMORY" ref="4717f332ced1fc7309d838e18fceca8d801d8c71da74a43617639a19208b88ad" args="" -->OUT_OF_MEMORY</em>&nbsp;</td><td>
This status code is returned when the implementation is unable to allocate sufficient memory to satisfy the requirements of the function. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8db4adaef38957bf105d496ba3e6d143cb"></a><!-- doxytag: member="INVALID_HANDLE" ref="4717f332ced1fc7309d838e18fceca8db4adaef38957bf105d496ba3e6d143cb" args="" -->INVALID_HANDLE</em>&nbsp;</td><td>
Attempt to use an invalid handle. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8da5d3538ea17b13c758b6bef0720410d3"></a><!-- doxytag: member="FILE_ERROR" ref="4717f332ced1fc7309d838e18fceca8da5d3538ea17b13c758b6bef0720410d3" args="" -->FILE_ERROR</em>&nbsp;</td><td>
There was an error while accessing a transmittal file. </td></tr>
<tr><td valign="top"><em><a class="anchor" name="4717f332ced1fc7309d838e18fceca8d739ba221f2028fcf64456e6cd69d592e"></a><!-- doxytag: member="INVALID_DRM_CLASS" ref="4717f332ced1fc7309d838e18fceca8d739ba221f2028fcf64456e6cd69d592e" args="" -->INVALID_DRM_CLASS</em>&nbsp;</td><td>
The DRM class of the object is invalid for the operation or handle assignment. </td></tr>
</table>
</dl>

</div>
</div><p>
<hr size="1">
<table width="100%">
<tr valign="middle">
<td align="left"><b>SEDRIS Transmittal Access C++ API</b></td>
<td align="right"><b>Version 4.1.4 - 14 Sep 2010</b></td>
</tr>
<tr valign="middle">
<td align="left">Copyright &copy; 2010 <a href="http://www.sedris.org">SEDRIS</a>&trade;</td>
<td align="right">Docs by <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.4.7-20061004</td>
</tr>
</table>
</body>
</html>
