<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>SEDRIS Transmittal Access C++ API</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#FFFFFF">

<!-- Generated by Doxygen 1.4.7-20061004 -->
<div class="tabs">
  <ul>
    <li><a href="main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="modules.htm"><span>Modules</span></a></li>
    <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
    <li id="current"><a href="classes.htm"><span>Classes</span></a></li>
    <li><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="classes.htm"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="a00635.htm">sedris</a>::<a class="el" href="a00310.htm">seHelperImage</a></div>
<h1>sedris::seHelperImage Class Reference<br>
<small>
[<a class="el" href="a00636.htm">Utility Classes</a>]</small>
</h1><!-- doxytag: class="sedris::seHelperImage" -->A helper for reading &lt;Image&gt; data.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;seHelperImage.h&gt;</code>
<p>
<a href="a01579.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="47a748f26e7066ea7f786ecd6558a59f"></a><!-- doxytag: member="sedris::seHelperImage::seHelperImage" ref="47a748f26e7066ea7f786ecd6558a59f" args="()" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00310.htm#47a748f26e7066ea7f786ecd6558a59f">seHelperImage</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c57c47227a93aed242f523fef659ce2a"></a><!-- doxytag: member="sedris::seHelperImage::seHelperImage" ref="c57c47227a93aed242f523fef659ce2a" args="(const seHelperImage &amp;other)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00310.htm#c57c47227a93aed242f523fef659ce2a">seHelperImage</a> (const <a class="el" href="a00310.htm">seHelperImage</a> &amp;other)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Copy constructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="eaec05e1d0e2205c896a7b6439a043aa"></a><!-- doxytag: member="sedris::seHelperImage::operator=" ref="eaec05e1d0e2205c896a7b6439a043aa" args="(const seHelperImage &amp;other)" -->
<a class="el" href="a00310.htm">seHelperImage</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00310.htm#eaec05e1d0e2205c896a7b6439a043aa">operator=</a> (const <a class="el" href="a00310.htm">seHelperImage</a> &amp;other)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Assignment. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="20dd199286acf59abd8e628aa2c578f6"></a><!-- doxytag: member="sedris::seHelperImage::~seHelperImage" ref="20dd199286acf59abd8e628aa2c578f6" args="()" -->
virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00310.htm#20dd199286acf59abd8e628aa2c578f6">~seHelperImage</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00310.htm#3b12796d8da14bb0267c8776f71fa119">init</a> (<a class="el" href="a00108.htm">seDRMImage</a> &amp;image, <a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Short_Integer_Unsigned.htm">SE_Short_Integer_Unsigned</a> mip_level, const SE_Desired_Image_Parameters *des_params=NULL)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Initializes the helper and retrieves the image data.  <a href="#3b12796d8da14bb0267c8776f71fa119"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Byte_Unsigned.htm">SE_Byte_Unsigned</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00310.htm#56fda23a3e409f023681792b61b6d24e">getImageData</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the pointer to the image data.  <a href="#56fda23a3e409f023681792b61b6d24e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d63da64b933ec4ab9e24e2aa025188f1"></a><!-- doxytag: member="sedris::seHelperImage::getImageDataSize" ref="d63da64b933ec4ab9e24e2aa025188f1" args="()" -->
<a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Integer_Unsigned.htm">SE_Integer_Unsigned</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00310.htm#d63da64b933ec4ab9e24e2aa025188f1">getImageDataSize</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the number of bytes in the (possibly rearranged) image data. <br></td></tr>
<tr><td colspan="2"><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static <a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Integer_Unsigned.htm">SE_Integer_Unsigned</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00310.htm#1e94b6c921114b2ff73754d5f7fa4747">getRearrangedDataSize</a> (const SE_Desired_Image_Parameters *des_params, <a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Integer_Unsigned.htm">SE_Integer_Unsigned</a> size_horizontal, <a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Integer_Unsigned.htm">SE_Integer_Unsigned</a> size_vertical, <a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Integer_Unsigned.htm">SE_Integer_Unsigned</a> size_z)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the number of bytes in a rearranged image data.  <a href="#1e94b6c921114b2ff73754d5f7fa4747"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="81e0b786b8bec18c2125d040b7246dbc"></a><!-- doxytag: member="sedris::seHelperImage::reset" ref="81e0b786b8bec18c2125d040b7246dbc" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00310.htm#81e0b786b8bec18c2125d040b7246dbc">reset</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resets the helper's data. <br></td></tr>
<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="83811a1e7149fbd9637ecb24024f2de2"></a><!-- doxytag: member="sedris::seHelperImage::_data" ref="83811a1e7149fbd9637ecb24024f2de2" args="" -->
<a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Byte_Unsigned.htm">SE_Byte_Unsigned</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00310.htm#83811a1e7149fbd9637ecb24024f2de2">_data</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The image data. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d8dfe3a9ce9b2ff0e44696139e32110d"></a><!-- doxytag: member="sedris::seHelperImage::_data_size" ref="d8dfe3a9ce9b2ff0e44696139e32110d" args="" -->
<a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Integer_Unsigned.htm">SE_Integer_Unsigned</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00310.htm#d8dfe3a9ce9b2ff0e44696139e32110d">_data_size</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The size of image data. <br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
A helper for reading &lt;Image&gt; data. 
<p>
<a class="el" href="a00310.htm">seHelperImage</a> takes care of memory management and rearrangement of image data. Since the image data is managed by this class (users don't need to free it), you can keep an instance of this class as long as you need access to the image's data. This is true even if the transmittal is closed or the image object used to initialize the helper goes out of scope.<p>
The following sample code demonstrates the use of this class to print the red, green, and blue values of the first pixel of an image (the image is known to be of signature SE_IMG_SIG_123COLOUR and with 8 bits per component, first MIP level is used): <div class="fragment"><pre class="fragment">    seDRMImage image;
    ... image object is retrieved

    <a class="code" href="a00310.htm#47a748f26e7066ea7f786ecd6558a59f">seHelperImage</a> hlpr;

    hlpr.init(image, 0); <span class="comment">// 0 for first MIP level</span>

    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *data_ptr = hlpr.getImageData();

    printf(<span class="stringliteral">"%d, %d, %d"</span>, *data_ptr, *(data_ptr+1), *(data_ptr+2));
</pre></div><p>
You can also use this class to modify the image data. The following code could be used as a follow up to the sample code above to perform this: <div class="fragment"><pre class="fragment">    ... image data obtained as above

    *data_ptr = 0; <span class="comment">// R value of above image set to 0</span>

    <span class="comment">// image data stored back in the image object</span>
    image.putImageData(0, hlpr.getImageDataSize(), hlpr.getImageData());
</pre></div><p>
The following sample code demonstrates the use of this class to access the image data by rearranging the data to conform to a specific organization: <div class="fragment"><pre class="fragment">    seDRMImage image;
    ... image object is retrieved

    SE_Desired_Image_Parameters desired_param;
    <a class="code" href="a00310.htm#47a748f26e7066ea7f786ecd6558a59f">seHelperImage</a> hlpr;

    <span class="comment">// ... fill out "desired_param" as needed, such as colour model,</span>
    <span class="comment">// scan direction, bits per component, etc.</span>

    hlpr.init(image, mip_level, &amp;desired_param);

    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *data_ptr = hlpr.getImageData();

    <span class="comment">//... access the rearranged image data pointed by "data_ptr"</span>
</pre></div> Note that if you rearrange the image data, then in general you will not be able to put the image data back without first rearranging it again to match the original image format (unless, of course, you change the fields of the image object containing the data to match the rearranged image data parameters).<p>
<dl class="note" compact><dt><b>Note:</b></dt><dd>Image data organization is dependent on the image's signature, its scan direction, and the component bit sizes. The general storage mechanism for the texels is by putting all the components for each texel together, followed by all the components for the next texel, and so on. This is texel (pixel) data ordering. Scan line (all the red values on the first scan line, then all the green values ...) and image plane ordering (all the values of red within the image, then all the values of green...) are not supported.</dd></dl>
<dl class="warning" compact><dt><b>Warning:</b></dt><dd>Be careful when using this class in STL containers, since some operations may require copy/reallocation of data which could adversely impact performance.</dd></dl>
<dl class="author" compact><dt><b>Author:</b></dt><dd>Warren Macchi </dd></dl>

<p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="3b12796d8da14bb0267c8776f71fa119"></a><!-- doxytag: member="sedris::seHelperImage::init" ref="3b12796d8da14bb0267c8776f71fa119" args="(seDRMImage &amp;image, SE_Short_Integer_Unsigned mip_level, const SE_Desired_Image_Parameters *des_params=NULL)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sedris::seHelperImage::init           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00108.htm">seDRMImage</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>image</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Short_Integer_Unsigned.htm">SE_Short_Integer_Unsigned</a>&nbsp;</td>
          <td class="paramname"> <em>mip_level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const SE_Desired_Image_Parameters *&nbsp;</td>
          <td class="paramname"> <em>des_params</em> = <code>NULL</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Initializes the helper and retrieves the image data. 
<p>
The <code>mip_level</code> must be &lt; image's level count (0-based). Optional <code>des_params</code> causes a rearranging of the image data.<p>
<dl class="note" compact><dt><b>Note:</b></dt><dd>After calling this function, any previous data allocated by this class is freed (hence all previously returned pointers become invalid). </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>image</em>&nbsp;</td><td>in: the &lt;Image&gt; object to retrieve data from </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>mip_level</em>&nbsp;</td><td>in: the MIP level desired </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>des_params</em>&nbsp;</td><td>in (optional): if provided, instructs the helper to rearrange the image data </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="56fda23a3e409f023681792b61b6d24e"></a><!-- doxytag: member="sedris::seHelperImage::getImageData" ref="56fda23a3e409f023681792b61b6d24e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Byte_Unsigned.htm">SE_Byte_Unsigned</a>* sedris::seHelperImage::getImageData           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns the pointer to the image data. 
<p>
Since the image data is managed by this class (users don't need to free it), you can keep an instance of this class as long as you need access to the image's data. This is true even if the transmittal is closed or the image object used to initialize the helper goes out of scope. <dl class="warning" compact><dt><b>Warning:</b></dt><dd>Once this class instance goes out of scope, is deleted, or is initialized with a new Image object, the returned pointer becomes invalid. </dd></dl>

</div>
</div><p>
<a class="anchor" name="1e94b6c921114b2ff73754d5f7fa4747"></a><!-- doxytag: member="sedris::seHelperImage::getRearrangedDataSize" ref="1e94b6c921114b2ff73754d5f7fa4747" args="(const SE_Desired_Image_Parameters *des_params, SE_Integer_Unsigned size_horizontal, SE_Integer_Unsigned size_vertical, SE_Integer_Unsigned size_z)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Integer_Unsigned.htm">SE_Integer_Unsigned</a> sedris::seHelperImage::getRearrangedDataSize           </td>
          <td>(</td>
          <td class="paramtype">const SE_Desired_Image_Parameters *&nbsp;</td>
          <td class="paramname"> <em>des_params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Integer_Unsigned.htm">SE_Integer_Unsigned</a>&nbsp;</td>
          <td class="paramname"> <em>size_horizontal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Integer_Unsigned.htm">SE_Integer_Unsigned</a>&nbsp;</td>
          <td class="paramname"> <em>size_vertical</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="elRef" doxygen="doxy_tags_drm.xml:../drm/" href="../drm/types/SE_Integer_Unsigned.htm">SE_Integer_Unsigned</a>&nbsp;</td>
          <td class="paramname"> <em>size_z</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns the number of bytes in a rearranged image data. 
<p>
Normally you would not need to use this method. It is provided in case you want to know the size of an image that you are planning to rearrange (possibly to make a choice as to whether to proceed to use the helper or not). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>des_params</em>&nbsp;</td><td>in: the parameters for the rearranging </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size_horizontal</em>&nbsp;</td><td>in: the horizontal size of the image </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size_vertical</em>&nbsp;</td><td>in: the vertical size of the image </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>size_z</em>&nbsp;</td><td>in: the z size of the image </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr size="1">
<table width="100%">
<tr valign="middle">
<td align="left"><b>SEDRIS Transmittal Access C++ API</b></td>
<td align="right"><b>Version 4.1.4 - 14 Sep 2010</b></td>
</tr>
<tr valign="middle">
<td align="left">Copyright &copy; 2010 <a href="http://www.sedris.org">SEDRIS</a>&trade;</td>
<td align="right">Docs by <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.4.7-20061004</td>
</tr>
</table>
</body>
</html>
