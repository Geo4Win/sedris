<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>SEDRIS Transmittal Access C++ API</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#FFFFFF">

<!-- Generated by Doxygen 1.4.7-20061004 -->
<div class="tabs">
  <ul>
    <li><a href="main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="modules.htm"><span>Modules</span></a></li>
    <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
    <li id="current"><a href="classes.htm"><span>Classes</span></a></li>
    <li><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="classes.htm"><span>Alphabetical&nbsp;List</span></a></li>
    <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
    <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
    <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
  </ul></div>
<div class="nav">
<a class="el" href="a00635.htm">sedris</a>::<a class="el" href="a00311.htm">seHelperSRM</a></div>
<h1>sedris::seHelperSRM Class Reference<br>
<small>
[<a class="el" href="a00636.htm">Utility Classes</a>]</small>
</h1><!-- doxytag: class="sedris::seHelperSRM" -->A helper for working with SRM SRFs, SRM Coordinates, and DRM Locations.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;seHelperSRM.h&gt;</code>
<p>
<a href="a01580.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="502cc82a540735cc6aa9b27ae5bffb82"></a><!-- doxytag: member="sedris::seHelperSRM::seHelperSRM" ref="502cc82a540735cc6aa9b27ae5bffb82" args="()" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00311.htm#502cc82a540735cc6aa9b27ae5bffb82">seHelperSRM</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8fb06236ca3a544be97945c5b057f263"></a><!-- doxytag: member="sedris::seHelperSRM::seHelperSRM" ref="8fb06236ca3a544be97945c5b057f263" args="(const seHelperSRM &amp;other)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00311.htm#8fb06236ca3a544be97945c5b057f263">seHelperSRM</a> (const <a class="el" href="a00311.htm">seHelperSRM</a> &amp;other)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Copy constructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="651e5670d456847749a1915bbb8c2704"></a><!-- doxytag: member="sedris::seHelperSRM::operator=" ref="651e5670d456847749a1915bbb8c2704" args="(const seHelperSRM &amp;other)" -->
<a class="el" href="a00311.htm">seHelperSRM</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00311.htm#651e5670d456847749a1915bbb8c2704">operator=</a> (const <a class="el" href="a00311.htm">seHelperSRM</a> &amp;other)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Assignment. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2445bdd360f43e1d07147cf50c8b62aa"></a><!-- doxytag: member="sedris::seHelperSRM::~seHelperSRM" ref="2445bdd360f43e1d07147cf50c8b62aa" args="()" -->
virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00311.htm#2445bdd360f43e1d07147cf50c8b62aa">~seHelperSRM</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Destructor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00311.htm#d5854f754dfaf369db385bb59848db8e">init</a> (const <a class="elRef" doxygen="doxy_tags_srm.xml:../srm/" href="../srm/types/SRM_SRF_Parameters_Info.htm">SRM_SRF_Parameters_Info</a> &amp;srf_params_info)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Initializes the helper with a specific SRF information.  <a href="#d5854f754dfaf369db385bb59848db8e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="773528b8afe9bd87f9ad81ba219dfd57"></a><!-- doxytag: member="sedris::seHelperSRM::getSRF" ref="773528b8afe9bd87f9ad81ba219dfd57" args="() const " -->
srm::BaseSRF *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00311.htm#773528b8afe9bd87f9ad81ba219dfd57">getSRF</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the SRF used to initialize the helper, or NULL if not initialized. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">srm::Coord *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00311.htm#129397e942d1f8c1d22a70e8be9e4fae">createCoordinate</a> (const <a class="el" href="a00138.htm">seDRMLocation</a> &amp;loc_obj) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns an SRM coordinate instance from a &lt;Location&gt; DRM object.  <a href="#129397e942d1f8c1d22a70e8be9e4fae"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00311.htm#6f09b2055794ffb1abe09c6cd1030250">freeCoordinate</a> (srm::Coord *coord)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Frees a coordinate created by <a class="el" href="a00311.htm#129397e942d1f8c1d22a70e8be9e4fae">createCoordinate()</a>.  <a href="#6f09b2055794ffb1abe09c6cd1030250"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00311.htm#950a03eba95cf6856dff12690ccefb02">createDRMLocation</a> (<a class="el" href="a00315.htm">seTransmittal</a> &amp;xmtal, const srm::Coord &amp;coord, <a class="el" href="a00138.htm">seDRMLocation</a> &amp;loc_obj)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a DRM &lt;Location&gt; object based on an SRM Coordinate.  <a href="#950a03eba95cf6856dff12690ccefb02"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="293d78b482d3b2200cef60062ab107fa"></a><!-- doxytag: member="sedris::seHelperSRM::reset" ref="293d78b482d3b2200cef60062ab107fa" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00311.htm#293d78b482d3b2200cef60062ab107fa">reset</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Resets the helper's data. <br></td></tr>
<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f2c03efa1846d09525408f4ad8b0dffb"></a><!-- doxytag: member="sedris::seHelperSRM::_srf" ref="f2c03efa1846d09525408f4ad8b0dffb" args="" -->
srm::BaseSRF *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00311.htm#f2c03efa1846d09525408f4ad8b0dffb">_srf</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">SRF being used. <br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
A helper for working with SRM SRFs, SRM Coordinates, and DRM Locations. 
<p>
<a class="el" href="a00311.htm">seHelperSRM</a> provides utility methods for converting from DRM Location objects to SRM Coordinates and vice-versa. Note that this class does not do the SRF coordinate conversions for you, but it provides a simple interface for doing this (see sample code below).<p>
The following code illustrates a typical consumption case for changing the SRF of locations in a transmittal so that they are in CD coordinates: <div class="fragment"><pre class="fragment">    seDRMEnvironmentRoot env_root;

    ... retrieve &amp;lt;Environment_Root&amp;gt; object from transmittal

    <span class="comment">// initialize the SRM Helper with the &amp;lt;Environment_Root&amp;gt; SRF info</span>
    <a class="code" href="a00311.htm#502cc82a540735cc6aa9b27ae5bffb82">seHelperSRM</a> helper;

    helper.init(env_root.get_srf_context_info().srf_parameters_info);

    <span class="comment">// make the CD SRF and coordinate to change transmittal coordinates to</span>
    srm::SRF_Celestiodetic *srf_cd =
        srm::SRF_Celestiodetic::create(SRM_ORMCOD_WGS_1984, SRM_RTCOD_WGS_1984_IDENTITY);
    srm::Coord3D_Celestiodetic coord_cd(srf_cd);

    <span class="comment">// the following will typically be included in some type of loop</span>
    <span class="comment">// START OF LOOP</span>

    seDRMLocation loc;

    ... retrieve location object from transmittal

    <span class="comment">// this creates the coordinate in its original SRF</span>
    srm::Coord *coord = helper.createCoordinate(loc);

    <span class="comment">// see if it is a 3D coord (use similar code for surface coords)</span>
    <span class="keywordflow">if</span> (coord-&gt;isA(srm::Coord::COORD_TYP_THREE_D))
    {
        <span class="comment">// this is not really needed, but it shows how to cast the coord</span>
        srm::Coord3D *coord3d = dynamic_cast&lt;srm::Coord3D*&gt;(coord);

        srf_cd-&gt;changeCoordinateSRF(*coord3d, coord_cd);
        printf(<span class="stringliteral">"   CD: long=%.3f  lat=%.3f  elli_height=%.3f\n"</span>,
                <a class="code" href="a00629.htm#babd9773c5bff99bc6fd06af881f6b7f">RAD2DEG</a>(coord_cd.get_longitude()),
                <a class="code" href="a00629.htm#babd9773c5bff99bc6fd06af881f6b7f">RAD2DEG</a>(coord_cd.get_latitude()),
                coord_cd.get_ellipsoidal_height());
    }

    helper.freeCoordinate(coord);

    <span class="comment">// END OF LOOP</span>

    srf_cd-&gt;release();
</pre></div><p>
The following code illustrates the use of the SRM helper to create the appropriate transmittal DRM Location objects: <div class="fragment"><pre class="fragment">    seTransmittal xmtal;
    seDRMLocation loc_obj;
    srm::Coord *coord;

    <span class="comment">// START OF LOOP</span>

  ... coord is set to point to some SRM coordinate
    <a class="code" href="a00311.htm#950a03eba95cf6856dff12690ccefb02">seHelperSRM::createDRMLocation</a>(xmtal, *coord, loc_obj);
    ... use loc_obj as relationship to another object (e.g. component)

    <span class="comment">// END OF LOOP</span>
</pre></div><p>
<dl class="author" compact><dt><b>Author:</b></dt><dd>Warren Macchi </dd></dl>

<p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="d5854f754dfaf369db385bb59848db8e"></a><!-- doxytag: member="sedris::seHelperSRM::init" ref="d5854f754dfaf369db385bb59848db8e" args="(const SRM_SRF_Parameters_Info &amp;srf_params_info)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sedris::seHelperSRM::init           </td>
          <td>(</td>
          <td class="paramtype">const <a class="elRef" doxygen="doxy_tags_srm.xml:../srm/" href="../srm/types/SRM_SRF_Parameters_Info.htm">SRM_SRF_Parameters_Info</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>srf_params_info</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Initializes the helper with a specific SRF information. 
<p>
You can initialize this class with any of the DRM classes that contain a field with SRF information, like &lt;Environment_Root&gt; and &lt;Property_Grid&gt;.<p>
Example usage: <div class="fragment"><pre class="fragment">            seDRMEnvironmentRoot env_root;
            <a class="code" href="a00311.htm#502cc82a540735cc6aa9b27ae5bffb82">seHelperSRM</a> srm_helper;

            ... retrieve env_root from transmittal
            srm_helper.init(env_root.get_srf_context_info().srf_parameters_info);
            ... use the srm_helper
</pre></div><p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>srf_params_info</em>&nbsp;</td><td>in: the SRF information structure </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="129397e942d1f8c1d22a70e8be9e4fae"></a><!-- doxytag: member="sedris::seHelperSRM::createCoordinate" ref="129397e942d1f8c1d22a70e8be9e4fae" args="(const seDRMLocation &amp;loc_obj) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">srm::Coord* sedris::seHelperSRM::createCoordinate           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00138.htm">seDRMLocation</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>loc_obj</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns an SRM coordinate instance from a &lt;Location&gt; DRM object. 
<p>
The returned coordinate is in the SRF used to initialize the helper. If the location DRM object instance passed in does not match the initialization SRF, an exception will be thrown. For example, if an &lt;Environment Root&gt;'s SRF is CD, then only surface or 3D CD location objects can be accepted.<p>
Use <a class="el" href="a00311.htm#6f09b2055794ffb1abe09c6cd1030250">freeCoordinate()</a> to free the returned SRM Coordinate object. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>loc_obj</em>&nbsp;</td><td>in: the source DRM location object </td></tr>
  </table>
</dl>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>a new SRM coordinate (use <a class="el" href="a00311.htm#6f09b2055794ffb1abe09c6cd1030250">freeCoordinate()</a> to free) </dd></dl>

</div>
</div><p>
<a class="anchor" name="6f09b2055794ffb1abe09c6cd1030250"></a><!-- doxytag: member="sedris::seHelperSRM::freeCoordinate" ref="6f09b2055794ffb1abe09c6cd1030250" args="(srm::Coord *coord)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void sedris::seHelperSRM::freeCoordinate           </td>
          <td>(</td>
          <td class="paramtype">srm::Coord *&nbsp;</td>
          <td class="paramname"> <em>coord</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Frees a coordinate created by <a class="el" href="a00311.htm#129397e942d1f8c1d22a70e8be9e4fae">createCoordinate()</a>. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>coord</em>&nbsp;</td><td>in: the SRM coordinate to free </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="950a03eba95cf6856dff12690ccefb02"></a><!-- doxytag: member="sedris::seHelperSRM::createDRMLocation" ref="950a03eba95cf6856dff12690ccefb02" args="(seTransmittal &amp;xmtal, const srm::Coord &amp;coord, seDRMLocation &amp;loc_obj)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void sedris::seHelperSRM::createDRMLocation           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00315.htm">seTransmittal</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>xmtal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const srm::Coord &amp;&nbsp;</td>
          <td class="paramname"> <em>coord</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00138.htm">seDRMLocation</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>loc_obj</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td width="100%"><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Creates a DRM &lt;Location&gt; object based on an SRM Coordinate. 
<p>
Once the &lt;Location&gt; object is created, it can be used as any object created by the <a class="el" href="a00315.htm#7d4feeeb32265b0d05183a6164f17e4c">seTransmittal::createObject()</a> method.<p>
<dl class="note" compact><dt><b>Note:</b></dt><dd>The transmittal must be opened in EDIT or CREATE mode. </dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="a00315.htm#7d4feeeb32265b0d05183a6164f17e4c">seTransmittal::createObject()</a> </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>xmtal</em>&nbsp;</td><td>in: the transmittal that will contain the created object </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>coord</em>&nbsp;</td><td>in: the source SRM coordinate </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>loc_obj</em>&nbsp;</td><td>in/out: contains the newly created DRM object </td></tr>
  </table>
</dl>

</div>
</div><p>
<hr size="1">
<table width="100%">
<tr valign="middle">
<td align="left"><b>SEDRIS Transmittal Access C++ API</b></td>
<td align="right"><b>Version 4.1.4 - 14 Sep 2010</b></td>
</tr>
<tr valign="middle">
<td align="left">Copyright &copy; 2010 <a href="http://www.sedris.org">SEDRIS</a>&trade;</td>
<td align="right">Docs by <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.4.7-20061004</td>
</tr>
</table>
</body>
</html>
