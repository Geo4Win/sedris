/*
 *  Copyright (c) 2006 Accent Geographic. All rights reserved.
 *  See the license file for licensing information.
 *  Created: Wed Jul 26 23:47:08 2006
 *
 *  DO NOT EDIT THIS FILE! (Autogenerated)
 */

// SEDRIS C++ SDK Release 4.1.4 - July 1, 2011

/*
 *                             NOTICE
 * 
 * This software is provided openly and freely for use in representing and
 * interchanging environmental data & databases.
 * 
 * This software was developed for use by the United States Government with
 * unlimited rights.  The software was developed under contract
 * DASG60-02-D-0006 TO-193 by Science Applications International Corporation.
 * The software is unclassified and is deemed as Distribution A, approved
 * for Public Release.
 * 
 * Use by others is permitted only upon the ACCEPTANCE OF THE TERMS AND
 * CONDITIONS, AS STIPULATED UNDER THE FOLLOWING PROVISIONS:
 * 
 *    1. Recipient may make unlimited copies of this software and give
 *       copies to other persons or entities as long as the copies contain
 *       this NOTICE, and as long as the same copyright notices that
 *       appear on, or in, this software remain.
 * 
 *    2. Trademarks. All trademarks belong to their respective trademark
 *       holders.  Third-Party applications/software/information are
 *       copyrighted by their respective owners.
 * 
 *    3. Recipient agrees to forfeit all intellectual property and
 *       ownership rights for any version created from the modification
 *       or adaptation of this software, including versions created from
 *       the translation and/or reverse engineering of the software design.
 * 
 *    4. Transfer.  Recipient may not sell, rent, lease, or sublicense
 *       this software.  Recipient may, however enable another person
 *       or entity the rights to use this software, provided that this
 *       AGREEMENT and NOTICE is furnished along with the software and
 *       /or software system utilizing this software.
 * 
 *       All revisions, modifications, created by the Recipient, to this
 *       software and/or related technical data shall be forwarded by the
 *       Recipient to the Government at the following address:
 * 
 *         SMDC
 *         Attention SEDRIS (TO193) TPOC
 *         P.O. Box 1500
 *         Huntsville, AL  35807-3801
 * 
 *         or via electronic mail to:  se-mgmt@sedris.org
 * 
 *    5. No Warranty. This software is being delivered to you AS IS
 *       and there is no warranty, EXPRESS or IMPLIED, as to its use
 *       or performance.
 * 
 *       The RECIPIENT ASSUMES ALL RISKS, KNOWN AND UNKNOWN, OF USING
 *       THIS SOFTWARE.  The DEVELOPER EXPRESSLY DISCLAIMS, and the
 *       RECIPIENT WAIVES, ANY and ALL PERFORMANCE OR RESULTS YOU MAY
 *       OBTAIN BY USING THIS SOFTWARE OR DOCUMENTATION.  THERE IS
 *       NO WARRANTY, EXPRESS OR, IMPLIED, AS TO NON-INFRINGEMENT OF
 *       THIRD PARTY RIGHTS, MERCHANTABILITY, OR FITNESS FOR ANY
 *       PARTICULAR PURPOSE.  IN NO EVENT WILL THE DEVELOPER, THE
 *       UNITED STATES GOVERNMENT OR ANYONE ELSE ASSOCIATED WITH THE
 *       DEVELOPMENT OF THIS SOFTWARE BE HELD LIABLE FOR ANY CONSEQUENTIAL,
 *       INCIDENTAL OR SPECIAL DAMAGES, INCLUDING ANY LOST PROFITS
 *       OR LOST SAVINGS WHATSOEVER.
 */

/** @file seDRMTransmittalSummary.h
@author Warren Macchi (Accent Geographic)
@brief Accessors to the seDRMTransmittalSummary (290) class.
*/

#ifndef _seDRMTransmittalSummary_h
#define _seDRMTransmittalSummary_h

#include "seDRMBase.h"

namespace sedris {

/** seDRMTransmittalSummary wraps the DRM <a href="../drm/classes/TransmittalSummary.htm">&lt;Transmittal_Summary&gt;</a> class.
@author Warren Macchi
@version Revision: 1.8
@see seDRMBase
*/
class seDRMTransmittalSummary : public seDRMBase
{
public:

    /// Default constructor
    seDRMTransmittalSummary() {}

    /// Constructor for seDRM... class conversions
    seDRMTransmittalSummary( const seObject &other ) : seDRMBase(other) {}

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#features_present">features_present</a>
    SE_Present_In get_features_present()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, features_present);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#features_present">features_present</a>
    void set_features_present( SE_Present_In features_present )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, features_present, features_present);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#geometry_present">geometry_present</a>
    SE_Present_In get_geometry_present()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, geometry_present);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#geometry_present">geometry_present</a>
    void set_geometry_present( SE_Present_In geometry_present )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, geometry_present, geometry_present);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#geometry_topology_present">geometry_topology_present</a>
    SE_Present_In get_geometry_topology_present()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, geometry_topology_present);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#geometry_topology_present">geometry_topology_present</a>
    void set_geometry_topology_present( SE_Present_In geometry_topology_present )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, geometry_topology_present, geometry_topology_present);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#data_tables_present">data_tables_present</a>
    SE_Present_In get_data_tables_present()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, data_tables_present);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#data_tables_present">data_tables_present</a>
    void set_data_tables_present( SE_Present_In data_tables_present )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, data_tables_present, data_tables_present);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#priority_values_present">priority_values_present</a>
    SE_Present_In get_priority_values_present()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, priority_values_present);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#priority_values_present">priority_values_present</a>
    void set_priority_values_present( SE_Present_In priority_values_present )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, priority_values_present, priority_values_present);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#mobility_values_present">mobility_values_present</a>
    SE_Present_In get_mobility_values_present()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, mobility_values_present);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#mobility_values_present">mobility_values_present</a>
    void set_mobility_values_present( SE_Present_In mobility_values_present )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, mobility_values_present, mobility_values_present);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#thermal_values_present">thermal_values_present</a>
    SE_Present_In get_thermal_values_present()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, thermal_values_present);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#thermal_values_present">thermal_values_present</a>
    void set_thermal_values_present( SE_Present_In thermal_values_present )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, thermal_values_present, thermal_values_present);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#terrain_lods_present">terrain_lods_present</a>
    SE_Present_In get_terrain_lods_present()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, terrain_lods_present);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#terrain_lods_present">terrain_lods_present</a>
    void set_terrain_lods_present( SE_Present_In terrain_lods_present )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, terrain_lods_present, terrain_lods_present);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#two_D_features_flag">two_D_features_flag</a>
    SE_Present_In get_two_D_features_flag()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, two_D_features_flag);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#two_D_features_flag">two_D_features_flag</a>
    void set_two_D_features_flag( SE_Present_In two_D_features_flag )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, two_D_features_flag, two_D_features_flag);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#models_present">models_present</a>
    SE_Boolean get_models_present()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, models_present);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#models_present">models_present</a>
    void set_models_present( SE_Boolean models_present )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, models_present, models_present);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#images_present">images_present</a>
    SE_Boolean get_images_present()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, images_present);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#images_present">images_present</a>
    void set_images_present( SE_Boolean images_present )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, images_present, images_present);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#sounds_present">sounds_present</a>
    SE_Boolean get_sounds_present()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, sounds_present);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#sounds_present">sounds_present</a>
    void set_sounds_present( SE_Boolean sounds_present )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, sounds_present, sounds_present);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#symbols_present">symbols_present</a>
    SE_Boolean get_symbols_present()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, symbols_present);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#symbols_present">symbols_present</a>
    void set_symbols_present( SE_Boolean symbols_present )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, symbols_present, symbols_present);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#colours_present">colours_present</a>
    SE_Boolean get_colours_present()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, colours_present);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#colours_present">colours_present</a>
    void set_colours_present( SE_Boolean colours_present )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, colours_present, colours_present);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#colour_model">colour_model</a>
    SE_Colour_Model get_colour_model()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, colour_model);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#colour_model">colour_model</a>
    void set_colour_model( SE_Colour_Model colour_model )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, colour_model, colour_model);
    }

    /// Get field <a href="../drm/classes/TransmittalSummary.htm#EDCS_usage_list_is_complete">EDCS_usage_list_is_complete</a>
    SE_Boolean get_EDCS_usage_list_is_complete()
    {
        DRMBASE_RET_FIELDS(Transmittal_Summary, EDCS_usage_list_is_complete);
    }

    /// Set field <a href="../drm/classes/TransmittalSummary.htm#EDCS_usage_list_is_complete">EDCS_usage_list_is_complete</a>
    void set_EDCS_usage_list_is_complete( SE_Boolean EDCS_usage_list_is_complete )
    {
        DRMBASE_ALLOC_FIELDS;
        DRMBASE_SET_FIELDS(Transmittal_Summary, EDCS_usage_list_is_complete, EDCS_usage_list_is_complete);
    }

    /** Gets the DRM class type this object can reference (mostly internal use).
        @warning Don't confuse with getDRMClass(), which is dependent on the
            actual type held by this DRM class object reference.
        @return SE_CLS_DRM_TRANSMITTAL_SUMMARY
    */
    virtual SE_DRM_Class getClassType() const
    {
        return SE_CLS_DRM_TRANSMITTAL_SUMMARY;
    }

};

} // namespace sedris

#endif // _seDRMTransmittalSummary_h
