<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Spatial Reference Model C API</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#ffffff">
<!-- SRM C++ SDK -->
<!-- SRM spec. 4.1 -->


<!-- Generated by Doxygen 1.3.2 -->
<div class="qindex"><a class="qindex" href="main.htm">Main&nbsp;Page</a> | <a class="qindex" href="classes.htm">Alphabetical&nbsp;List</a> | <a class="qindex" href="annotated.htm">Compound&nbsp;List</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindex" href="functions.htm">Compound&nbsp;Members</a> | <a class="qindex" href="globals.htm">File&nbsp;Members</a></div>
<h1>srm_util.h File Reference</h1>Various useful functions.  
<a href="#_details">More...</a>
<p>
<code>#include "<a class="el" href="a00312.htm">srm_types.h</a>"</code><br>

<p>
<a href="a00313.htm">Go to the source code of this file.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>#define&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a0">EXPORT_DLL</a></td></tr>

<tr><td colspan=2><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a1">SRM_CoordinateEqual</a> (const <a class="el" href="a00117.htm">SRM_Coordinate</a> *a_ptr, const <a class="el" href="a00117.htm">SRM_Coordinate</a> *b_ptr, <a class="el" href="a00259.htm#a23">SRM_Boolean</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a2">SRM_CrossProduct</a> (const <a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a> a_ptr, const <a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a> b_ptr, <a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a> result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a3">SRM_DeriveCoordinate2DFrom3D</a> (const <a class="el" href="a00117.htm">SRM_Coordinate</a> *coord_3d_ptr, <a class="el" href="a00117.htm">SRM_Coordinate</a> *coord_2d_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a4">SRM_DotProduct</a> (const <a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a> a_ptr, const <a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a> b_ptr, <a class="el" href="a00259.htm#a17">SRM_Long_Float</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a5">SRM_GetVersionInformation</a> (<a class="el" href="a00259.htm#a16">SRM_Integer_Positive</a> *major_SRM_version, <a class="el" href="a00259.htm#a15">SRM_Integer_Unsigned</a> *minor_SRM_version, char *interim_SRM_version)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a6">SRM_Matrix3x3Add</a> (const <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a> a_ptr, const <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a> b_ptr, <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a> result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a7">SRM_Matrix3x3Multiply</a> (const <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a> a_ptr, const <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a> b_ptr, <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a> result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a8">SRM_Matrix3x3Sub</a> (const <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a> a_ptr, const <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a> b_ptr, <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a> result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a9">SRM_Matrix4x4Add</a> (const <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a> a_ptr, const <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a> b_ptr, <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a> result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a10">SRM_Matrix4x4Multiply</a> (const <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a> a_ptr, const <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a> b_ptr, <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a> result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a11">SRM_Matrix4x4Sub</a> (const <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a> a_ptr, const <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a> b_ptr, <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a> result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a12">SRM_VectorMagnitude</a> (const <a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a> vec_ptr, <a class="el" href="a00259.htm#a17">SRM_Long_Float</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a13">SRM_VectorMultByScalar</a> (const <a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a> vec_ptr, <a class="el" href="a00259.htm#a17">SRM_Long_Float</a> scalar, <a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a> result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a14">SRM_EnumNameToAxisDirection</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1121">SRM_Axis_Direction</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a15">SRM_EnumNameToBoolean</a> (const char *enum_name_in_ptr, <a class="el" href="a00259.htm#a23">SRM_Boolean</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a16">SRM_EnumNameToCoordinateValidRegion</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1122">SRM_Coordinate_Valid_Region</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a17">SRM_EnumNameToCSCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1080">SRM_CS_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a18">SRM_EnumNameToDSSCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1081">SRM_DSS_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a19">SRM_EnumNameToIntervalType</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1123">SRM_Interval_Type</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a20">SRM_EnumNameToORMCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1085">SRM_ORM_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a21">SRM_EnumNameToORMTCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1086">SRM_ORMT_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a22">SRM_EnumNameToPolarAspect</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1124">SRM_Polar_Aspect</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a23">SRM_EnumNameToRDCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1087">SRM_RD_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a24">SRM_EnumNameToRTCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1088">SRM_RT_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a25">SRM_EnumNameToSpatialCoordinateCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1078">SRM_Spatial_Coordinate_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a26">SRM_EnumNameToSRFCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1089">SRM_SRF_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a27">SRM_EnumNameToSRFParametersInfoCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1090">SRM_SRF_Parameters_Info_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a28">SRM_EnumNameToSRFSCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1092">SRM_SRFS_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a29">SRM_EnumNameToSRFSMAlabamaSPCSCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1093">SRM_SRFSM_Alabama_SPCS_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a30">SRM_EnumNameToSRFSMJapanRectangularPlaneCSCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1095">SRM_SRFSM_Japan_Rectangular_Plane_CS_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a31">SRM_EnumNameToSRFSMLambertNTFCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1096">SRM_SRFSM_Lambert_NTF_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a32">SRM_EnumNameToSRFSMUPSCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1097">SRM_SRFSM_UPS_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a33">SRM_EnumNameToSRFSMUTMCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1098">SRM_SRFSM_UTM_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a34">SRM_EnumNameToSRFSMWisconsinSPCSCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1099">SRM_SRFSM_Wisconsin_SPCS_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a35">SRM_EnumNameToSRFTCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1091">SRM_SRFT_Code</a> *result_out_ptr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00264.htm#a36">SRM_EnumNameToStatusCode</a> (const char *enum_name_in_ptr, <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> *result_out_ptr)</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Various useful functions. 
<p>
<dl compact><dt><b>Author:</b></dt><dd>Automatically generated file </dd></dl>

<p>
Definition in file <a class="el" href="a00313.htm">srm_util.h</a>.<hr><h2>Define Documentation</h2>
<a name="a0" doxytag="srm_util.h::EXPORT_DLL"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> #define EXPORT_DLL
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>

<p>
Definition at line <a class="el" href="a00313.htm#l00090">90</a> of file <a class="el" href="a00313.htm">srm_util.h</a>.    </td>
  </tr>
</table>
<hr><h2>Function Documentation</h2>
<a name="a1" doxytag="srm_util.h::SRM_CoordinateEqual"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_CoordinateEqual </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00117.htm">SRM_Coordinate</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>a_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00117.htm">SRM_Coordinate</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>b_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00259.htm#a23">SRM_Boolean</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Compares the values in a_ptr and b_ptr and reports in result_out_ptr whether a_ptr's value equals b_ptr's value.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>a_ptr</em>&nbsp;</td><td>- 1st coordinate operand</td></tr>
    <tr><td valign=top><em>b_ptr</em>&nbsp;</td><td>- 2nd coordinate operand</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- a SRM_Boolean variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set to the appropriate result, if valid parameters were passed in. <p>
SRM_STATCOD_INVALID_SOURCE_COORDINATE - and no changes are made, if a_ptr or b_ptr is NULL. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if result_out_ptr is NULL. <p>
SRM_STATCOD_OPERATION_UNSUPPORTED - and result_out_ptr is set to SRM_FALSE, if a_ptr-&gt;spatial_coord_code does not equal b_ptr-&gt;spatial_coord_code. </dd></dl>
    </td>
  </tr>
</table>
<a name="a2" doxytag="srm_util.h::SRM_CrossProduct"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_CrossProduct </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>a_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>b_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Computes the cross product of two vectors.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>a_ptr</em>&nbsp;</td><td>- 1st vector operand</td></tr>
    <tr><td valign=top><em>b_ptr</em>&nbsp;</td><td>- 2nd vector operand</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- a SRM_Vector_3D variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set to the appropriate result, if valid parameters were passed in. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if result_out_ptr, a_ptr, or b_ptr is NULL. </dd></dl>
    </td>
  </tr>
</table>
<a name="a3" doxytag="srm_util.h::SRM_DeriveCoordinate2DFrom3D"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_DeriveCoordinate2DFrom3D </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00117.htm">SRM_Coordinate</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_3d_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00117.htm">SRM_Coordinate</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_2d_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Given a 3D coordinate, expressed in an SRF that has a corresponding 2D SRF, constructs the corresponding 2D representation (i.e., without the z/elevation portion of the 3D, in the proper 2D SRF).<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>coord_3d_ptr</em>&nbsp;</td><td>- pointer to the 3D coordinate for which we are obtaining the corresponding 2D coordinate.</td></tr>
    <tr><td valign=top><em>coord_2d_ptr</em>&nbsp;</td><td>- pointer to the 2D coordinate that we are deriving.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *coord_2d_ptr is set to the appropriate result, if valid parameters were passed in. <p>
SRM_STATCOD_INVALID_TARGET_COORDINATE - and *coord_2d_ptr is left unchanged, if coord_2d_ptr is NULL. <p>
SRM_STATCOD_INVALID_SOURCE_COORDINATE - and *coord_2d_ptr is left unchanged, if coord_3d_ptr is NULL, or is expressed in a 3D SRF that has no corresponding 2D SRF. </dd></dl>
    </td>
  </tr>
</table>
<a name="a4" doxytag="srm_util.h::SRM_DotProduct"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_DotProduct </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>a_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>b_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00259.htm#a17">SRM_Long_Float</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Computes the dot product of 2 vectors.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>a_ptr</em>&nbsp;</td><td>- 1st vector operand</td></tr>
    <tr><td valign=top><em>b_ptr</em>&nbsp;</td><td>- 2nd vector operand</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to an SRM_Long_Float variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set to the appropriate result, if valid parameters were passed in. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if result_out_ptr, a_ptr, or b_ptr is NULL. </dd></dl>
    </td>
  </tr>
</table>
<a name="a14" doxytag="srm_util.h::SRM_EnumNameToAxisDirection"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToAxisDirection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1121">SRM_Axis_Direction</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_Axis_Direction corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a15" doxytag="srm_util.h::SRM_EnumNameToBoolean"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToBoolean </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00259.htm#a23">SRM_Boolean</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_Boolean corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a16" doxytag="srm_util.h::SRM_EnumNameToCoordinateValidRegion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToCoordinateValidRegion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1122">SRM_Coordinate_Valid_Region</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_Coordinate_Valid_Region corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a17" doxytag="srm_util.h::SRM_EnumNameToCSCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToCSCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1080">SRM_CS_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_CS_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a18" doxytag="srm_util.h::SRM_EnumNameToDSSCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToDSSCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1081">SRM_DSS_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_DSS_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a19" doxytag="srm_util.h::SRM_EnumNameToIntervalType"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToIntervalType </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1123">SRM_Interval_Type</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_Interval_Type corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a20" doxytag="srm_util.h::SRM_EnumNameToORMCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToORMCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1085">SRM_ORM_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_ORM_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a21" doxytag="srm_util.h::SRM_EnumNameToORMTCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToORMTCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1086">SRM_ORMT_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_ORMT_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a22" doxytag="srm_util.h::SRM_EnumNameToPolarAspect"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToPolarAspect </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1124">SRM_Polar_Aspect</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_Polar_Aspect corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a23" doxytag="srm_util.h::SRM_EnumNameToRDCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToRDCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1087">SRM_RD_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_RD_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a24" doxytag="srm_util.h::SRM_EnumNameToRTCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToRTCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1088">SRM_RT_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_RT_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a25" doxytag="srm_util.h::SRM_EnumNameToSpatialCoordinateCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToSpatialCoordinateCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1078">SRM_Spatial_Coordinate_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_Spatial_Coordinate_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a26" doxytag="srm_util.h::SRM_EnumNameToSRFCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToSRFCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1089">SRM_SRF_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_SRF_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a27" doxytag="srm_util.h::SRM_EnumNameToSRFParametersInfoCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToSRFParametersInfoCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1090">SRM_SRF_Parameters_Info_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_SRF_Parameters_Info_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a28" doxytag="srm_util.h::SRM_EnumNameToSRFSCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToSRFSCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1092">SRM_SRFS_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_SRFS_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a29" doxytag="srm_util.h::SRM_EnumNameToSRFSMAlabamaSPCSCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToSRFSMAlabamaSPCSCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1093">SRM_SRFSM_Alabama_SPCS_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_SRFSM_Alabama_SPCS_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a30" doxytag="srm_util.h::SRM_EnumNameToSRFSMJapanRectangularPlaneCSCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToSRFSMJapanRectangularPlaneCSCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1095">SRM_SRFSM_Japan_Rectangular_Plane_CS_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_SRFSM_Japan_Rectangular_Plane_CS_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a31" doxytag="srm_util.h::SRM_EnumNameToSRFSMLambertNTFCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToSRFSMLambertNTFCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1096">SRM_SRFSM_Lambert_NTF_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_SRFSM_Lambert_NTF_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a32" doxytag="srm_util.h::SRM_EnumNameToSRFSMUPSCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToSRFSMUPSCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1097">SRM_SRFSM_UPS_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_SRFSM_UPS_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a33" doxytag="srm_util.h::SRM_EnumNameToSRFSMUTMCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToSRFSMUTMCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1098">SRM_SRFSM_UTM_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_SRFSM_UTM_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a34" doxytag="srm_util.h::SRM_EnumNameToSRFSMWisconsinSPCSCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToSRFSMWisconsinSPCSCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1099">SRM_SRFSM_Wisconsin_SPCS_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_SRFSM_Wisconsin_SPCS_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a35" doxytag="srm_util.h::SRM_EnumNameToSRFTCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToSRFTCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1091">SRM_SRFT_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_SRFT_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a36" doxytag="srm_util.h::SRM_EnumNameToStatusCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_EnumNameToStatusCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const char *&nbsp;</td>
          <td class="mdname" nowrap> <em>enum_name_in_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the SRM_Status_Code corresponding to the given string.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>enum_name_in_ptr</em>&nbsp;</td><td>- enumerant name to be processed</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to a variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set appropriately, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if any parameter was NULL or invalid. </dd></dl>
    </td>
  </tr>
</table>
<a name="a5" doxytag="srm_util.h::SRM_GetVersionInformation"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_GetVersionInformation </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00259.htm#a16">SRM_Integer_Positive</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>major_SRM_version</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00259.htm#a15">SRM_Integer_Unsigned</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>minor_SRM_version</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>interim_SRM_version</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This function returns the version of the implementation of the SRM used to define the given transmittal.<p>
Major versions are specified by an integer that is incremented whenever large changes are made to the implementation.<p>
Minor versions are specified by an integer that is incremented whenever any small changes are made to the implementation.<p>
Interim versions are specified using a lower case letter that is incremented whenever a new interim version of the implementation is released.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>major_SRM_version</em>&nbsp;</td><td>- a pointer to a SRM_Integer_Positive in the user's memory space that will be set to an integer value greater than or equal to 1</td></tr>
    <tr><td valign=top><em>minor_SRM_version</em>&nbsp;</td><td>- a pointer to a SRM_Integer_Unsigned in the user's memory space that will be set to an integer value between 0 and 99, inclusive</td></tr>
    <tr><td valign=top><em>interim_SRM_version</em>&nbsp;</td><td>- a pointer to a char in the user's memory space that will be set to a value between 'a' and 'z' inclusive. If it was not an interim version of the SRM, then the value will be set to ''.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and the output parameters are set, if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and the output parameters are left unchanged, if major_SRM_version, minor_SRM_version, or interim_SRM_version was NULL. </dd></dl>
    </td>
  </tr>
</table>
<a name="a6" doxytag="srm_util.h::SRM_Matrix3x3Add"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_Matrix3x3Add </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>a_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>b_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Adds two SRM_Matrix_3x3 matrices.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>a_ptr</em>&nbsp;</td><td>- pointer to 1st operand</td></tr>
    <tr><td valign=top><em>b_ptr</em>&nbsp;</td><td>- pointer to 2nd operand</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to result.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and *result_out_ptr is left unchanged, if result_out_ptr, a_ptr, or b_ptr was NULL. </dd></dl>
    </td>
  </tr>
</table>
<a name="a7" doxytag="srm_util.h::SRM_Matrix3x3Multiply"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_Matrix3x3Multiply </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>a_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>b_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Multiplies two SRM_Matrix_3x3 matrices.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>a_ptr</em>&nbsp;</td><td>- pointer to 1st operand</td></tr>
    <tr><td valign=top><em>b_ptr</em>&nbsp;</td><td>- pointer to 2nd operand</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to result.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and *result_out_ptr is left unchanged, if result_out_ptr, a_ptr, or b_ptr was NULL. </dd></dl>
    </td>
  </tr>
</table>
<a name="a8" doxytag="srm_util.h::SRM_Matrix3x3Sub"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_Matrix3x3Sub </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>a_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>b_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1083">SRM_Matrix_3x3</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Subtracts the matrix in *b_ptr from the matrix in *a_ptr.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>a_ptr</em>&nbsp;</td><td>- pointer to 1st operand</td></tr>
    <tr><td valign=top><em>b_ptr</em>&nbsp;</td><td>- pointer to 2nd operand</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to result.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and *result_out_ptr is left unchanged, if result_out_ptr, a_ptr, or b_ptr was NULL. </dd></dl>
    </td>
  </tr>
</table>
<a name="a9" doxytag="srm_util.h::SRM_Matrix4x4Add"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_Matrix4x4Add </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>a_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>b_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Adds two SRM_Matrix_4x4 matrices.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>a_ptr</em>&nbsp;</td><td>- pointer to 1st operand</td></tr>
    <tr><td valign=top><em>b_ptr</em>&nbsp;</td><td>- pointer to 2nd operand</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to result.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and *result_out_ptr is left unchanged, if result_out_ptr, a_ptr, or b_ptr was NULL. </dd></dl>
    </td>
  </tr>
</table>
<a name="a10" doxytag="srm_util.h::SRM_Matrix4x4Multiply"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_Matrix4x4Multiply </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>a_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>b_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Multiplies two SRM_Matrix_4x4 matrices.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>a_ptr</em>&nbsp;</td><td>- pointer to 1st operand</td></tr>
    <tr><td valign=top><em>b_ptr</em>&nbsp;</td><td>- pointer to 2nd operand</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to result.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and *result_out_ptr is left unchanged, if result_out_ptr, a_ptr, or b_ptr was NULL. </dd></dl>
    </td>
  </tr>
</table>
<a name="a11" doxytag="srm_util.h::SRM_Matrix4x4Sub"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_Matrix4x4Sub </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>a_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>b_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1084">SRM_Matrix_4x4</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Subtracts the matrix in *b_ptr from the matrix in *a_ptr.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>a_ptr</em>&nbsp;</td><td>- pointer to 1st operand</td></tr>
    <tr><td valign=top><em>b_ptr</em>&nbsp;</td><td>- pointer to 2nd operand</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to result.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - if valid parameters were passed in and all operations succeeded. <p>
SRM_STATCOD_INACTIONABLE - and *result_out_ptr is left unchanged, if result_out_ptr, a_ptr, or b_ptr was NULL. </dd></dl>
    </td>
  </tr>
</table>
<a name="a12" doxytag="srm_util.h::SRM_VectorMagnitude"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_VectorMagnitude </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>vec_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00259.htm#a17">SRM_Long_Float</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Computes the magnitude of a vector.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>vec_ptr</em>&nbsp;</td><td>- pointer to the vector operand</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to an SRM_Long_Float variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set to the appropriate value, if valid parameters were passed in. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if result_out_ptr or vec_ptr is NULL. </dd></dl>
    </td>
  </tr>
</table>
<a name="a13" doxytag="srm_util.h::SRM_VectorMultByScalar"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> EXPORT_DLL <a class="el" href="a00263.htm#a1100">SRM_Status_Code</a> SRM_VectorMultByScalar </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>vec_ptr</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00259.htm#a17">SRM_Long_Float</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>scalar</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00263.htm#a1082">SRM_Vector_3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>result_out_ptr</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Multiplies vec_ptr's vector by scalar, returns the result in result_out_ptr.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>vec_ptr</em>&nbsp;</td><td>- pointer to the vector operand</td></tr>
    <tr><td valign=top><em>scalar</em>&nbsp;</td><td>- the scalar multiplier.</td></tr>
    <tr><td valign=top><em>result_out_ptr</em>&nbsp;</td><td>- pointer to an SRM_Vector_3D variable in the user's memory space where the result will be stored.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>SRM_STATCOD_SUCCESS - and *result_out_ptr is set to the appropriate value, if valid parameters were passed in. <p>
SRM_STATCOD_INACTIONABLE - and no changes are made, if result_out_ptr or vec_ptr is NULL. </dd></dl>
    </td>
  </tr>
</table>
<hr size="1">
<table width="100%">
<tr valign="middle">
<td align="left"><strong>Spatial Reference Model C API</strong></td>
<td align="right"><strong>
Version: 4.1.4 - July 1, 2011
</strong></td>
</tr>
<tr valign="middle">
<td align="left">Copyright &copy; 2011 <a href="http://www.sedris.org">SEDRIS</a>&#153;</td>
<td align="right">Docs by <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.3.2</td>
</tr>
</table>
</body>
</html>
