<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Spatial Reference Model C++ API</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#ffffff">
<!-- SRM C++ SDK -->
<!-- SRM spec. 4.1 -->


<!-- Generated by Doxygen 1.3.2 -->
<div class="qindex"><a class="qindex" href="main.htm">Main&nbsp;Page</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="classes.htm">Alphabetical&nbsp;List</a> | <a class="qindex" href="annotated.htm">Compound&nbsp;List</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindex" href="functions.htm">Compound&nbsp;Members</a> | <a class="qindex" href="globals.htm">File&nbsp;Members</a></div>
<h1>srm::SRF_LocalSpaceAzimuthal Member List</h1>This is the complete list of members for <a class="el" href="a00182.htm">srm::SRF_LocalSpaceAzimuthal</a>, including all inherited members.<table>
  <tr class="memlist"><td><a class="el" href="a00123.htm#p3">_cache</a></td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#p1">_id</a></td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#p2">_impl</a></td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#p0">_ref_cnt</a></td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>_validate_coords</b> (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#b0">BaseSRF</a>(void *impl)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00124.htm#b0">BaseSRF_2D</a>(void *impl)</td><td><a class="el" href="a00124.htm">srm::BaseSRF_2D</a></td><td><code> [inline, protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>BaseSRF_2D</b> (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [friend]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>BaseSRF_3D</b> (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [friend]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>BaseSRF_MapProjection</b> (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [friend]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>BaseSRF_WithEllipsoidalHeight</b> (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [friend]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>BaseSRF_WithTangentPlaneSurface</b> (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00124.htm#e0">calculateEuclideanDistance</a>(const Coord2D &amp;coord1, const Coord2D &amp;coord2)</td><td><a class="el" href="a00124.htm">srm::BaseSRF_2D</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#e4">srm::BaseSRF::calculateEuclideanDistance</a>(const Coord &amp;coord1, const Coord &amp;coord2)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00124.htm#a5">changeCoordinate2DArraySRF</a>(Coord2D **src_coord_array, SRM_Integer_Positive *index, Coord2D **des_coord_array)</td><td><a class="el" href="a00124.htm">srm::BaseSRF_2D</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00124.htm#a7">changeCoordinate2DArraySRFObject</a>(Coord2D **src_coord_array, const SRM_ORM_Transformation_2D_Parameters hst, SRM_Integer_Positive *index, Coord2D **des_coord_array)</td><td><a class="el" href="a00124.htm">srm::BaseSRF_2D</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00124.htm#a4">changeCoordinate2DSRF</a>(const Coord2D &amp;src_coord, Coord2D &amp;des_coord)</td><td><a class="el" href="a00124.htm">srm::BaseSRF_2D</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00124.htm#a6">changeCoordinate2DSRFObject</a>(const Coord2D &amp;src_coord, const SRM_ORM_Transformation_2D_Parameters hst, Coord2D &amp;des_coord)</td><td><a class="el" href="a00124.htm">srm::BaseSRF_2D</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a11">changeCoordinateSRF</a>(const Coord &amp;src_coord, Coord &amp;des_coord)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a12">checkCoordinate</a>(const Coord &amp;src)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a18">clone</a>()</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>Coord3D</b> (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a16">coordinateValidationIsOn</a>()</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="a00182.htm#e0">create</a>(SRM_ORM_Code orm, SRM_RT_Code rt)</td><td><a class="el" href="a00182.htm">srm::SRF_LocalSpaceAzimuthal</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00182.htm#e1">create</a>(SRM_SRF_Parameters_Info srf_params)</td><td><a class="el" href="a00182.htm">srm::SRF_LocalSpaceAzimuthal</a></td><td><code> [inline, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00182.htm#a0">createCoordinate2D</a>(SRM_Long_Float coord_comp1, SRM_Long_Float coord_comp2)</td><td><a class="el" href="a00182.htm">srm::SRF_LocalSpaceAzimuthal</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#e1">createSRFSetMember</a>(SRM_SRFS_Info srfs_info, SRM_RT_Code rt)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#e0">createStandardSRF</a>(SRM_SRF_Code srf_code, SRM_RT_Code rt_code)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a13">freeCoordinate</a>(Coord *coord)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00124.htm#a3">freeCoordinate2D</a>(Coord2D *coord)</td><td><a class="el" href="a00124.htm">srm::BaseSRF_2D</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a3">get_orm</a>() const</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a5">get_rt</a>() const</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a7">getA</a>() const</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00182.htm#a2">getClassType</a>() const</td><td><a class="el" href="a00182.htm">srm::SRF_LocalSpaceAzimuthal</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a1">getCodes</a>(SRM_SRFT_Code &amp;t_code, SRM_SRF_Code &amp;srf_code, SRM_SRFS_Code_Info &amp;srfs_code_info) const</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00124.htm#a2">getCoordinate2DValues</a>(const Coord2D &amp;coord, SRM_Long_Float &amp;coord_comp1, SRM_Long_Float &amp;coord_comp2) const</td><td><a class="el" href="a00124.htm">srm::BaseSRF_2D</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a2">getCSCode</a>() const</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a8">getF</a>() const</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a19">getId</a>() const</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [inline]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>getImpl</b>() const (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [inline, protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a4">getOrm</a>() const</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a6">getRt</a>() const</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00182.htm#a1">isA</a>(SRF_ClassType type) const</td><td><a class="el" href="a00182.htm">srm::SRF_LocalSpaceAzimuthal</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00182.htm#a3">isEqual</a>(const SRF_LocalSpaceAzimuthal &amp;srf) const</td><td><a class="el" href="a00182.htm">srm::SRF_LocalSpaceAzimuthal</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="a00182.htm#a5">makeCopy</a>() const</td><td><a class="el" href="a00182.htm">srm::SRF_LocalSpaceAzimuthal</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="a00182.htm#b1">operator=</a>(const SRF_LocalSpaceAzimuthal &amp;)</td><td><a class="el" href="a00182.htm">srm::SRF_LocalSpaceAzimuthal</a></td><td><code> [inline, protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00124.htm#b1">srm::BaseSRF_2D::operator=</a>(const BaseSRF_2D &amp;)</td><td><a class="el" href="a00124.htm">srm::BaseSRF_2D</a></td><td><code> [inline, protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#b1">srm::BaseSRF::operator=</a>(const BaseSRF &amp;)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [inline, protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00182.htm#a4">operator==</a>(const SRF_LocalSpaceAzimuthal &amp;rhs) const</td><td><a class="el" href="a00182.htm">srm::SRF_LocalSpaceAzimuthal</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#e3">queryORMSupport</a>(SRM_ORM_Code orm_code, SRM_RT_Code rt_code)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#e2">querySRFTSupport</a>(SRM_SRFT_Code srft_code)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a0">release</a>()</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a15">setCoordinateValidationOff</a>()</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#a14">setCoordinateValidationOn</a>()</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#w31">SRF_ClassType</a> enum name</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="a00182.htm#b0">SRF_LocalSpaceAzimuthal</a>(void *impl)</td><td><a class="el" href="a00182.htm">srm::SRF_LocalSpaceAzimuthal</a></td><td><code> [inline, protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_CC</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_CD</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_CM</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_EC</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_EI</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_HAEC</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_HEEC</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_HEEQ</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_LCC</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_LCE_3D</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_LSA</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_LSP</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_LSR_2D</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_LSR_3D</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_LTSAS</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_LTSC</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_LTSE</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_M</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_MAP_PROJECTION</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_OMS</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_PD</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_PS</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_SEC</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_SEQ</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_SMD</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_SME</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_THREE_D</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_TM</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_TWO_D</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_WITH_ELLIPSOIDAL_HEIGHT</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>SRF_TYP_WITH_TANGENT_PLANE_SURFACE</b> enum value (defined in <a class="el" href="a00123.htm">srm::BaseSRF</a>)</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="a00182.htm#a6">toString</a>()</td><td><a class="el" href="a00182.htm">srm::SRF_LocalSpaceAzimuthal</a></td><td><code> [virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00123.htm#b2">~BaseSRF</a>()</td><td><a class="el" href="a00123.htm">srm::BaseSRF</a></td><td><code> [inline, protected, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00124.htm#b2">~BaseSRF_2D</a>()</td><td><a class="el" href="a00124.htm">srm::BaseSRF_2D</a></td><td><code> [inline, protected, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="a00182.htm#b2">~SRF_LocalSpaceAzimuthal</a>()</td><td><a class="el" href="a00182.htm">srm::SRF_LocalSpaceAzimuthal</a></td><td><code> [inline, protected, virtual]</code></td></tr>
</table><hr size="1">
<table width="100%">
<tr valign="middle">
<td align="left"><strong>Spatial Reference Model C++ API</strong></td>
<td align="right"><strong>
Version 4.1.4 - July 1, 2011
</strong></td>
</tr>
<tr valign="middle">
<td align="left">Copyright &copy; 2011 <a href="http://www.sedris.org">SEDRIS</a>&#153;</td>
<td align="right">Docs by <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.3.2</td>
</tr>
</table>
</body>
</html>
