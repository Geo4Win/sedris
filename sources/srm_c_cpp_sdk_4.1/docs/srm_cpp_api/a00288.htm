<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Spatial Reference Model C++ API</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#ffffff">
<!-- SRM C++ SDK -->
<!-- SRM spec. 4.1 -->


<!-- Generated by Doxygen 1.3.2 -->
<div class="qindex"><a class="qindex" href="main.htm">Main&nbsp;Page</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="classes.htm">Alphabetical&nbsp;List</a> | <a class="qindex" href="annotated.htm">Compound&nbsp;List</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindex" href="functions.htm">Compound&nbsp;Members</a> | <a class="qindex" href="globals.htm">File&nbsp;Members</a></div>
<h1>Exception.h</h1><a href="a00253.htm">Go to the documentation of this file.</a><div class="fragment"><pre>00001 <span class="comment">// SRM SDK Release 4.1.4 - July 1, 2011</span>
00002 
00003 <span class="comment">// - SRM spec. 4.1</span>
00004 
00005 <span class="comment">/*</span>
00006 <span class="comment"> *                             NOTICE</span>
00007 <span class="comment"> * </span>
00008 <span class="comment"> * This software is provided openly and freely for use in representing and</span>
00009 <span class="comment"> * interchanging environmental data &amp; databases.</span>
00010 <span class="comment"> * </span>
00011 <span class="comment"> * This software was developed for use by the United States Government with</span>
00012 <span class="comment"> * unlimited rights.  The software was developed under contract</span>
00013 <span class="comment"> * DASG60-02-D-0006 TO-193 by Science Applications International Corporation.</span>
00014 <span class="comment"> * The software is unclassified and is deemed as Distribution A, approved</span>
00015 <span class="comment"> * for Public Release.</span>
00016 <span class="comment"> * </span>
00017 <span class="comment"> * Use by others is permitted only upon the ACCEPTANCE OF THE TERMS AND</span>
00018 <span class="comment"> * CONDITIONS, AS STIPULATED UNDER THE FOLLOWING PROVISIONS:</span>
00019 <span class="comment"> * </span>
00020 <span class="comment"> *    1. Recipient may make unlimited copies of this software and give</span>
00021 <span class="comment"> *       copies to other persons or entities as long as the copies contain</span>
00022 <span class="comment"> *       this NOTICE, and as long as the same copyright notices that</span>
00023 <span class="comment"> *       appear on, or in, this software remain.</span>
00024 <span class="comment"> * </span>
00025 <span class="comment"> *    2. Trademarks. All trademarks belong to their respective trademark</span>
00026 <span class="comment"> *       holders.  Third-Party applications/software/information are</span>
00027 <span class="comment"> *       copyrighted by their respective owners.</span>
00028 <span class="comment"> * </span>
00029 <span class="comment"> *    3. Recipient agrees to forfeit all intellectual property and</span>
00030 <span class="comment"> *       ownership rights for any version created from the modification</span>
00031 <span class="comment"> *       or adaptation of this software, including versions created from</span>
00032 <span class="comment"> *       the translation and/or reverse engineering of the software design.</span>
00033 <span class="comment"> * </span>
00034 <span class="comment"> *    4. Transfer.  Recipient may not sell, rent, lease, or sublicense</span>
00035 <span class="comment"> *       this software.  Recipient may, however enable another person</span>
00036 <span class="comment"> *       or entity the rights to use this software, provided that this</span>
00037 <span class="comment"> *       AGREEMENT and NOTICE is furnished along with the software and</span>
00038 <span class="comment"> *       /or software system utilizing this software.</span>
00039 <span class="comment"> * </span>
00040 <span class="comment"> *       All revisions, modifications, created by the Recipient, to this</span>
00041 <span class="comment"> *       software and/or related technical data shall be forwarded by the</span>
00042 <span class="comment"> *       Recipient to the Government at the following address:</span>
00043 <span class="comment"> * </span>
00044 <span class="comment"> *         SMDC</span>
00045 <span class="comment"> *         Attention SEDRIS (TO193) TPOC</span>
00046 <span class="comment"> *         P.O. Box 1500</span>
00047 <span class="comment"> *         Huntsville, AL  35807-3801</span>
00048 <span class="comment"> * </span>
00049 <span class="comment"> *         or via electronic mail to:  se-mgmt@sedris.org</span>
00050 <span class="comment"> * </span>
00051 <span class="comment"> *    5. No Warranty. This software is being delivered to you AS IS</span>
00052 <span class="comment"> *       and there is no warranty, EXPRESS or IMPLIED, as to its use</span>
00053 <span class="comment"> *       or performance.</span>
00054 <span class="comment"> * </span>
00055 <span class="comment"> *       The RECIPIENT ASSUMES ALL RISKS, KNOWN AND UNKNOWN, OF USING</span>
00056 <span class="comment"> *       THIS SOFTWARE.  The DEVELOPER EXPRESSLY DISCLAIMS, and the</span>
00057 <span class="comment"> *       RECIPIENT WAIVES, ANY and ALL PERFORMANCE OR RESULTS YOU MAY</span>
00058 <span class="comment"> *       OBTAIN BY USING THIS SOFTWARE OR DOCUMENTATION.  THERE IS</span>
00059 <span class="comment"> *       NO WARRANTY, EXPRESS OR, IMPLIED, AS TO NON-INFRINGEMENT OF</span>
00060 <span class="comment"> *       THIRD PARTY RIGHTS, MERCHANTABILITY, OR FITNESS FOR ANY</span>
00061 <span class="comment"> *       PARTICULAR PURPOSE.  IN NO EVENT WILL THE DEVELOPER, THE</span>
00062 <span class="comment"> *       UNITED STATES GOVERNMENT OR ANYONE ELSE ASSOCIATED WITH THE</span>
00063 <span class="comment"> *       DEVELOPMENT OF THIS SOFTWARE BE HELD LIABLE FOR ANY CONSEQUENTIAL,</span>
00064 <span class="comment"> *       INCIDENTAL OR SPECIAL DAMAGES, INCLUDING ANY LOST PROFITS</span>
00065 <span class="comment"> *       OR LOST SAVINGS WHATSOEVER.</span>
00066 <span class="comment"> */</span>
00067 
00068 
00069 <span class="comment">// $Id: Exception.h,v 1.5 2006-02-13 14:09:21-05 shend Exp $/*</span>
00070 
00076 <span class="preprocessor">#ifndef _Exception_h</span>
00077 <span class="preprocessor"></span><span class="preprocessor">#define _Exception_h</span>
00078 <span class="preprocessor"></span>
00079 <span class="preprocessor">#if !defined(_WIN32)</span>
<a name="l00080"></a><a class="code" href="a00253.htm#a0">00080</a> <span class="preprocessor"></span><span class="preprocessor">#define EXPORT_SRM_CPP_DLL</span>
00081 <span class="preprocessor"></span><span class="preprocessor">#elif defined(BUILD_SRM_CPP) </span><span class="comment">/* SRM CPP Case */</span>
00082 <span class="preprocessor">#if !defined(EXPORT_SRM_CPP_DLL)</span>
00083 <span class="preprocessor"></span><span class="preprocessor">#if defined(_LIB)</span>
00084 <span class="preprocessor"></span><span class="preprocessor">#define EXPORT_SRM_CPP_DLL</span>
00085 <span class="preprocessor"></span><span class="preprocessor">#elif defined(_USRDLL)</span>
00086 <span class="preprocessor"></span><span class="preprocessor">#define EXPORT_SRM_CPP_DLL __declspec(dllexport)</span>
00087 <span class="preprocessor"></span><span class="preprocessor">#else</span>
00088 <span class="preprocessor"></span><span class="preprocessor">#define EXPORT_SRM_CPP_DLL __declspec(dllimport)</span>
00089 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00090 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
00091 <span class="preprocessor"></span><span class="preprocessor">#else </span><span class="comment">/* SRM C Case */</span>
00092 <span class="preprocessor">#define EXPORT_SRM_CPP_DLL</span>
00093 <span class="preprocessor"></span><span class="preprocessor">#endif </span><span class="comment">/* _WIN32 &amp;&amp; EXPORT_DLL */</span>
00094 
00095 <span class="preprocessor">#include "<a class="code" href="a00277.htm">srm_types.h</a>"</span>
00096 
00103 <span class="keyword">namespace </span>srm
00104 {
00105 
<a name="l00111"></a><a class="code" href="a00171.htm">00111</a> <span class="keyword">class </span>EXPORT_SRM_CPP_DLL Exception
00112 {
00113 <span class="keyword">public</span>:
00114 
00115     <span class="keyword">enum</span> {
00117         MAX_EXCEPTION_STR_LEN = 2000
00118     };
00119 
00121     Exception( <a class="code" href="a00277.htm#a1100">SRM_Status_Code</a> code );
00123     Exception( <a class="code" href="a00277.htm#a1100">SRM_Status_Code</a> code, <span class="keyword">const</span> <span class="keywordtype">char</span> *what );
00125     Exception( <span class="keyword">const</span> Exception &amp;other );
<a name="l00127"></a><a class="code" href="a00171.htm#a3">00127</a>     <span class="keyword">virtual</span> ~Exception() {}
00128 
00130     Exception &amp;operator =( <span class="keyword">const</span> Exception &amp;other );
00131 
<a name="l00133"></a><a class="code" href="a00171.htm#a5">00133</a>     <span class="keyword">virtual</span> <span class="keywordtype">void</span> setCodeAndWhat( SRM_Status_Code code, <span class="keyword">const</span> <span class="keywordtype">char</span> *what )
00134     {
00135         <span class="keywordtype">int</span> i=0;
00136         _code = code;
00137         <span class="keywordflow">while</span> (what &amp;&amp; *what &amp;&amp; i &lt; MAX_EXCEPTION_STR_LEN)
00138             _what[i] = *what, i++, what++;
00139         _what[i] = 0;
00140     }
00141 
<a name="l00143"></a><a class="code" href="a00171.htm#a6">00143</a>     <span class="keyword">virtual</span> <a class="code" href="a00277.htm#a1100">SRM_Status_Code</a> getCode()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _code; }
<a name="l00145"></a><a class="code" href="a00171.htm#a7">00145</a>     <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *getWhat()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> _what; }
00146 
00147 <span class="keyword">protected</span>:
00148 
<a name="l00149"></a><a class="code" href="a00171.htm#p0">00149</a>     <a class="code" href="a00277.htm#a1100">SRM_Status_Code</a> _code; 
<a name="l00150"></a><a class="code" href="a00171.htm#p1">00150</a>     <span class="keywordtype">char</span> _what[MAX_EXCEPTION_STR_LEN+1]; 
00151 };
00152 
00153 
00155 
<a name="l00156"></a><a class="code" href="a00171.htm#a0">00156</a> <span class="keyword">inline</span> Exception::Exception( SRM_Status_Code code )
00157 {
00158     <a class="code" href="a00171.htm#a5">setCodeAndWhat</a>(code, <span class="stringliteral">"No details"</span>);
00159 }
00160 
00161 
<a name="l00162"></a><a class="code" href="a00171.htm#a1">00162</a> <span class="keyword">inline</span> Exception::Exception( SRM_Status_Code code, <span class="keyword">const</span> <span class="keywordtype">char</span> *what )
00163 {
00164     <a class="code" href="a00171.htm#a5">setCodeAndWhat</a>(code, what);
00165 }
00166 
00167 
<a name="l00168"></a><a class="code" href="a00171.htm#a2">00168</a> <span class="keyword">inline</span> Exception::Exception( <span class="keyword">const</span> Exception &amp;other )
00169 {
00170     <a class="code" href="a00171.htm#a5">setCodeAndWhat</a>(other.<a class="code" href="a00171.htm#a6">getCode</a>(), other.<a class="code" href="a00171.htm#a7">getWhat</a>());
00171 }
00172 
00173 
<a name="l00174"></a><a class="code" href="a00171.htm#a4">00174</a> <span class="keyword">inline</span> Exception &amp;Exception::operator =( <span class="keyword">const</span> Exception &amp;other )
00175 {
00176     <a class="code" href="a00171.htm#a5">setCodeAndWhat</a>(other.<a class="code" href="a00171.htm#a6">getCode</a>(), other.<a class="code" href="a00171.htm#a7">getWhat</a>());
00177     <span class="keywordflow">return</span> *<span class="keyword">this</span>;
00178 }
00179 
00180 
00181 } <span class="comment">// namespace srm</span>
00182 
00183 <span class="preprocessor">#endif // _Exception_h</span>
</pre></div><hr size="1">
<table width="100%">
<tr valign="middle">
<td align="left"><strong>Spatial Reference Model C++ API</strong></td>
<td align="right"><strong>
Version 4.1.4 - July 1, 2011
</strong></td>
</tr>
<tr valign="middle">
<td align="left">Copyright &copy; 2011 <a href="http://www.sedris.org">SEDRIS</a>&#153;</td>
<td align="right">Docs by <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.3.2</td>
</tr>
</table>
</body>
</html>
